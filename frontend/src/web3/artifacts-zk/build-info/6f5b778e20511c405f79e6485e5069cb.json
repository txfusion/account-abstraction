{"id":"6f5b778e20511c405f79e6485e5069cb","_format":"hh-sol-build-info-1","solcVersion":"0.8.11","solcLongVersion":"0.8.11+commit.d7f03943","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/yieldFarming/MasterChef.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./tokens/RewardToken.sol\";\r\n\r\ncontract MasterChef is Ownable {\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of RewardToken\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accRewardTokenPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accRewardTokenPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. RewardTokens to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that RewardTokens distribution occurs.\r\n        uint256 accRewardTokenPerShare; // Accumulated RewardTokens per share, times 1e12. See below.\r\n    }\r\n    // The RewardToken!\r\n    RewardToken public rewardToken;\r\n    // RewardTokens created per block.\r\n    uint256 public rewardTokenPerBlock;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when REWARD TOKEN mining starts.\r\n    uint256 public startBlock;\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        RewardToken _rewardToken,\r\n        uint256 _rewardTokenPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        rewardToken = _rewardToken;\r\n        rewardTokenPerBlock = _rewardTokenPerBlock;\r\n        startBlock = _startBlock;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _lpToken,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock\r\n            ? block.number\r\n            : startBlock;\r\n        totalAllocPoint = totalAllocPoint + _allocPoint;\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accRewardTokenPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's RewardToken allocation point. Can only be called by the owner.\r\n    function set(\r\n        uint256 _pid,\r\n        uint256 _allocPoint,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint =\r\n            totalAllocPoint -\r\n            poolInfo[_pid].allocPoint +\r\n            _allocPoint;\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(\r\n        uint256 _from,\r\n        uint256 _to\r\n    ) public pure returns (uint256) {\r\n        return _to - _from;\r\n    }\r\n\r\n    // View function to see pending RewardTokens on frontend.\r\n    function pendingRewardToken(\r\n        uint256 _pid,\r\n        address _user\r\n    ) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accRewardTokenPerShare = pool.accRewardTokenPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(\r\n                pool.lastRewardBlock,\r\n                block.number\r\n            );\r\n            uint256 rewardTokenAmount = (multiplier *\r\n                rewardTokenPerBlock *\r\n                pool.allocPoint) / totalAllocPoint;\r\n            accRewardTokenPerShare =\r\n                accRewardTokenPerShare +\r\n                ((rewardTokenAmount * 1e12) / lpSupply);\r\n        }\r\n        return\r\n            ((user.amount * accRewardTokenPerShare) / 1e12) - user.rewardDebt;\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply == 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 rewardTokenAmount = (multiplier *\r\n            rewardTokenPerBlock *\r\n            pool.allocPoint) / totalAllocPoint;\r\n\r\n        rewardToken.mint(address(this), rewardTokenAmount);\r\n\r\n        pool.accRewardTokenPerShare =\r\n            pool.accRewardTokenPerShare +\r\n            ((rewardTokenAmount * 1e12) / lpSupply);\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for RewardToken allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = ((user.amount * pool.accRewardTokenPerShare) /\r\n                1e12) - user.rewardDebt;\r\n            rewardTokenTransfer(msg.sender, pending);\r\n        }\r\n        pool.lpToken.transferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount + _amount;\r\n        user.rewardDebt = (user.amount * pool.accRewardTokenPerShare) / 1e12;\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending = ((user.amount * pool.accRewardTokenPerShare) / 1e12) -\r\n            user.rewardDebt;\r\n\r\n        rewardTokenTransfer(msg.sender, pending);\r\n        user.amount = user.amount - _amount;\r\n        user.rewardDebt = (user.amount * pool.accRewardTokenPerShare) / 1e12;\r\n        pool.lpToken.transfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.transfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n\r\n    // rewardToken transfer function, just in case if rounding error causes pool to not have enough RewardTokens.\r\n    function rewardTokenTransfer(address _to, uint256 _amount) internal {\r\n        uint256 rewardTokenBalance = rewardToken.balanceOf(address(this));\r\n        if (_amount > rewardTokenBalance) {\r\n            rewardToken.transfer(_to, rewardTokenBalance);\r\n        } else {\r\n            rewardToken.transfer(_to, _amount);\r\n        }\r\n    }\r\n}\r\n"},"contracts/yieldFarming/tokens/LPToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract LPToken is ERC20 {\r\n    uint8 private _decimals;\r\n\r\n    constructor(\r\n        uint8 decimals_,\r\n        string memory name_,\r\n        string memory symbol_\r\n    ) ERC20(name_, symbol_) {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    function mint(address _to, uint256 _amount) public returns (bool) {\r\n        _mint(_to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function decimals() public view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n"},"contracts/yieldFarming/tokens/RewardToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract RewardToken is ERC20 {\r\n    uint8 private _decimals;\r\n\r\n    constructor(\r\n        uint8 decimals_,\r\n        string memory name_,\r\n        string memory symbol_\r\n    ) ERC20(name_, symbol_) {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    function mint(address _to, uint256 _amount) public returns (bool) {\r\n        _mint(_to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function decimals() public view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":3108,"end":3120},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":3149,"end":3161},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":4637,"end":4649},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":4798,"end":4810},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":5669,"end":5681},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":5874,"end":5886},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":5986,"end":5998},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.number' in your code, which might lead to unexpected        │\n│ behavior. Due to the nature of the zkEVM, the number of a block actually refers to the number    │\n│ of the whole batch will be sent to L1 (a sequentially generated batch number).                   │\n│ We will provide a custom method to access the L2 block number from the smart contract code in    │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":6369,"end":6381},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":7749,"end":7800},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":8099,"end":8154},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":8687,"end":8721},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/yieldFarming/MasterChef.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"5","start":8609,"end":8654},"type":"Warning"}],"version":"0.8.11","long_version":"0.8.11+commit.d7f03943.Linux.g++","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[824],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":825,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,824],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":825,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":824,"src":"1419:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1419:7:1"},{"baseName":{"id":121,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1428:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1428:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1436:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1436:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1170:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,824],"name":"ERC20","nameLocation":"1410:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1457:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1509:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":132,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1583:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1633:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1618:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1644:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2032:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2042:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2050:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2042:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2065:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2075:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2065:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1673:298:1","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2002:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1988:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2009:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2032:0:1"},"scope":699,"src":"1976:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2223:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2240:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2233:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2095:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2167:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2208:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:1"},"scope":699,"src":"2154:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2436:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2453:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2446:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2258:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2380:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2421:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:1"},"scope":699,"src":"2365:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3156:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3166:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2473:613:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3108:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3149:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:1"},"scope":699,"src":"3091:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3312:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3329:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3322:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3188:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3262:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3303:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:1"},"scope":699,"src":"3242:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3489:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3506:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3516:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3499:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3354:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3433:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3425:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3480:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:1"},"scope":699,"src":"3406:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3812:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3838:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3870:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3877:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3881:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3860:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3860:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3898:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3537:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3753:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3745:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3765:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3757:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3806:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:1"},"scope":699,"src":"3727:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4072:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4089:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4101:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4108:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4082:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3922:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4001:5:1","nodeType":"VariableDeclaration","scope":254,"src":"3993:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4016:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4008:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4063:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:1"},"scope":699,"src":"3974:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4520:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4538:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4530:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4546:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4577:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4584:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4593:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4568:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4568:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4610:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4129:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4456:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4448:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4473:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4465:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4514:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:1"},"scope":699,"src":"4431:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5323:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5341:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5333:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5351:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5389:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5395:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5404:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5373:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5373:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5431:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5437:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5441:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5421:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5421:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5458:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4634:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5229:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5221:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5251:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5243:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5271:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5317:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:1"},"scope":699,"src":"5190:286:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5965:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5983:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5975:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5991:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6022:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6029:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6048:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6055:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6038:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6066:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6013:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"6013:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6087:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5482:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5906:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5915:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5959:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:1"},"scope":699,"src":"5871:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6691:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"6717:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6739:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6776:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6783:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6766:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6809:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6829:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6801:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6896:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6929:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6936:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6945:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6964:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6920:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6920:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"7001:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6111:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6627:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6636:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6685:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:1"},"scope":699,"src":"6592:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7581:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7599:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7591:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7677:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7669:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7765:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7771:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7775:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7744:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7744:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7793:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7815:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7825:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7848:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7863:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7840:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7922:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7946:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7956:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7964:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7978:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7946:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8161:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8171:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8178:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8161:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8219:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8225:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8229:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8210:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8205:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8267:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8273:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8277:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8247:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8247:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7025:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7509:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7531:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7523:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7551:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7581:0:1"},"scope":699,"src":"7473:818:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8632:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8650:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8642:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8751:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8760:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8718:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8718:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8778:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8794:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8778:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8810:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8946:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8956:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8968:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8946:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9029:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8999:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8994:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9079:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9088:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9047:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9047:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8297:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8590:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8582:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8607:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8599:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8632:0:1"},"scope":699,"src":"8567:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9487:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9505:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9497:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9617:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9575:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9575:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9635:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9660:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9670:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9696:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9688:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9769:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9793:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9803:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9814:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9793:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9930:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9946:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9930:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9987:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10008:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9978:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9973:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10046:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10067:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"10026:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"10026:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9108:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9445:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9437:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9462:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9454:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9487:0:1"},"scope":699,"src":"9422:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10617:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10635:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10627:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10713:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10705:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10784:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10796:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10803:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10814:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10784:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10844:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10851:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10860:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10835:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10830:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10087:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10539:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10531:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10562:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10554:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10587:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10579:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10617:0:1"},"scope":699,"src":"10504:370:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11275:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11285:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11322:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11329:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11312:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11351:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11347:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11390:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11412:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11432:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11404:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11486:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11523:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11530:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11539:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11558:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11514:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11514:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10880:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11197:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11189:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11220:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11212:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11245:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11275:0:1"},"scope":699,"src":"11155:441:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12299:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11602:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12227:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12219:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12249:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12241:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12269:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12261:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12299:0:1"},"scope":699,"src":"12180:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"13007:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12307:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12935:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12927:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12957:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12949:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12977:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12969:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"13007:0:1"},"scope":699,"src":"12889:120:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1401:11610:1","usedErrors":[]}],"src":"105:12907:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2685:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2677:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2707:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2699:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2727:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2719:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2758:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:2"},"scope":777,"src":"2646:118:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2564:2","usedErrors":[]}],"src":"106:2661:2"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"}},"@openzeppelin/contracts/utils/Context.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":813,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":809,"id":812,"nodeType":"Return","src":"712:17:4"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":824,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":818,"id":821,"nodeType":"Return","src":"819:15:4"}]},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":824,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":825,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"}},"contracts/yieldFarming/MasterChef.sol":{"id":5,"ast":{"absolutePath":"contracts/yieldFarming/MasterChef.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"MasterChef":[1539],"Ownable":[112],"RewardToken":[1643]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":778,"src":"62:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":113,"src":"120:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/yieldFarming/tokens/RewardToken.sol","file":"./tokens/RewardToken.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1540,"sourceUnit":1644,"src":"174:34:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":830,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"235:7:5"},"id":831,"nodeType":"InheritanceSpecifier","src":"235:7:5"}],"canonicalName":"MasterChef","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1539,"linearizedBaseContracts":[1539,112,824],"name":"MasterChef","nameLocation":"221:10:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MasterChef.UserInfo","id":836,"members":[{"constant":false,"id":833,"mutability":"mutable","name":"amount","nameLocation":"312:6:5","nodeType":"VariableDeclaration","scope":836,"src":"304:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"rewardDebt","nameLocation":"382:10:5","nodeType":"VariableDeclaration","scope":836,"src":"374:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"374:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"284:8:5","nodeType":"StructDefinition","scope":1539,"src":"277:811:5","visibility":"public"},{"canonicalName":"MasterChef.PoolInfo","id":846,"members":[{"constant":false,"id":839,"mutability":"mutable","name":"lpToken","nameLocation":"1155:7:5","nodeType":"VariableDeclaration","scope":846,"src":"1148:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1148:6:5"},"referencedDeclaration":777,"src":"1148:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"allocPoint","nameLocation":"1214:10:5","nodeType":"VariableDeclaration","scope":846,"src":"1206:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"1334:15:5","nodeType":"VariableDeclaration","scope":846,"src":"1326:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"accRewardTokenPerShare","nameLocation":"1428:22:5","nodeType":"VariableDeclaration","scope":846,"src":"1420:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"1128:8:5","nodeType":"StructDefinition","scope":1539,"src":"1121:399:5","visibility":"public"},{"constant":false,"functionSelector":"f7c618c1","id":849,"mutability":"mutable","name":"rewardToken","nameLocation":"1570:11:5","nodeType":"VariableDeclaration","scope":1539,"src":"1551:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"},"typeName":{"id":848,"nodeType":"UserDefinedTypeName","pathNode":{"id":847,"name":"RewardToken","nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"1551:11:5"},"referencedDeclaration":1643,"src":"1551:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"visibility":"public"},{"constant":false,"functionSelector":"554c798a","id":851,"mutability":"mutable","name":"rewardTokenPerBlock","nameLocation":"1643:19:5","nodeType":"VariableDeclaration","scope":1539,"src":"1628:34:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1526fe27","id":855,"mutability":"mutable","name":"poolInfo","nameLocation":"1714:8:5","nodeType":"VariableDeclaration","scope":1539,"src":"1696:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo[]"},"typeName":{"baseType":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"1696:8:5"},"referencedDeclaration":846,"src":"1696:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"id":854,"nodeType":"ArrayTypeName","src":"1696:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage_ptr","typeString":"struct MasterChef.PoolInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"93f1a40b","id":862,"mutability":"mutable","name":"userInfo","nameLocation":"1834:8:5","nodeType":"VariableDeclaration","scope":1539,"src":"1778:64:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"},"typeName":{"id":861,"keyType":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1778:48:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"},"valueType":{"id":860,"keyType":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1797:28:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$","typeString":"mapping(address => struct MasterChef.UserInfo)"},"valueType":{"id":859,"nodeType":"UserDefinedTypeName","pathNode":{"id":858,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":836,"src":"1816:8:5"},"referencedDeclaration":836,"src":"1816:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"17caf6f1","id":865,"mutability":"mutable","name":"totalAllocPoint","nameLocation":"1952:15:5","nodeType":"VariableDeclaration","scope":1539,"src":"1937:34:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"48cd4cb1","id":867,"mutability":"mutable","name":"startBlock","nameLocation":"2051:10:5","nodeType":"VariableDeclaration","scope":1539,"src":"2036:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":875,"name":"Deposit","nameLocation":"2074:7:5","nodeType":"EventDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2098:4:5","nodeType":"VariableDeclaration","scope":875,"src":"2082:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2120:3:5","nodeType":"VariableDeclaration","scope":875,"src":"2104:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2133:6:5","nodeType":"VariableDeclaration","scope":875,"src":"2125:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2125:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2081:59:5"},"src":"2068:73:5"},{"anonymous":false,"id":883,"name":"Withdraw","nameLocation":"2153:8:5","nodeType":"EventDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2178:4:5","nodeType":"VariableDeclaration","scope":883,"src":"2162:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2200:3:5","nodeType":"VariableDeclaration","scope":883,"src":"2184:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2184:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":881,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2213:6:5","nodeType":"VariableDeclaration","scope":883,"src":"2205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2161:59:5"},"src":"2147:74:5"},{"anonymous":false,"id":891,"name":"EmergencyWithdraw","nameLocation":"2233:17:5","nodeType":"EventDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2277:4:5","nodeType":"VariableDeclaration","scope":891,"src":"2261:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"2261:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2308:3:5","nodeType":"VariableDeclaration","scope":891,"src":"2292:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":889,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2330:6:5","nodeType":"VariableDeclaration","scope":891,"src":"2322:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:93:5"},"src":"2227:117:5"},{"body":{"id":913,"nodeType":"Block","src":"2475:133:5","statements":[{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":901,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2486:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":902,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2500:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"src":"2486:26:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"id":904,"nodeType":"ExpressionStatement","src":"2486:26:5"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":905,"name":"rewardTokenPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2523:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"_rewardTokenPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2545:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2523:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ExpressionStatement","src":"2523:42:5"},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":909,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2576:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":910,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"2589:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2576:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"2576:24:5"}]},"id":914,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"_rewardToken","nameLocation":"2386:12:5","nodeType":"VariableDeclaration","scope":914,"src":"2374:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"RewardToken","nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"2374:11:5"},"referencedDeclaration":1643,"src":"2374:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"_rewardTokenPerBlock","nameLocation":"2417:20:5","nodeType":"VariableDeclaration","scope":914,"src":"2409:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"_startBlock","nameLocation":"2456:11:5","nodeType":"VariableDeclaration","scope":914,"src":"2448:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:111:5"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"2475:0:5"},"scope":1539,"src":"2352:256:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":922,"nodeType":"Block","src":"2670:41:5","statements":[{"expression":{"expression":{"id":919,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2688:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2688:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":918,"id":921,"nodeType":"Return","src":"2681:22:5"}]},"functionSelector":"081e3eda","id":923,"implemented":true,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"2625:10:5","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"2635:2:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":923,"src":"2661:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:9:5"},"scope":1539,"src":"2616:95:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":969,"nodeType":"Block","src":"3000:501:5","statements":[{"condition":{"id":935,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"3015:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"3011:61:5","trueBody":{"id":939,"nodeType":"Block","src":"3028:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3043:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3043:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"3043:17:5"}]}},{"assignments":[942],"declarations":[{"constant":false,"id":942,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"3090:15:5","nodeType":"VariableDeclaration","scope":969,"src":"3082:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3108:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3108:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":945,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3123:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3108:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":949,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3177:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3108:79:5","trueExpression":{"expression":{"id":947,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3149:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3149:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3082:105:5"},{"expression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":952,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3198:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3216:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":954,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3234:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3216:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3198:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":957,"nodeType":"ExpressionStatement","src":"3198:47:5"},{"expression":{"arguments":[{"arguments":[{"id":962,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3321:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},{"id":963,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3360:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":964,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"3407:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3284:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$846_storage_ptr_$","typeString":"type(struct MasterChef.PoolInfo storage pointer)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lpToken","allocPoint","lastRewardBlock","accRewardTokenPerShare"],"nodeType":"FunctionCall","src":"3284:198:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_memory_ptr","typeString":"struct MasterChef.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$846_memory_ptr","typeString":"struct MasterChef.PoolInfo memory"}],"expression":{"id":958,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3256:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3256:13:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$846_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage_ptr_$","typeString":"function (struct MasterChef.PoolInfo storage ref[] storage pointer,struct MasterChef.PoolInfo storage ref)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3256:237:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"3256:237:5"}]},"functionSelector":"1eaaa045","id":970,"implemented":true,"kind":"function","modifiers":[{"id":933,"kind":"modifierInvocation","modifierName":{"id":932,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2990:9:5"},"nodeType":"ModifierInvocation","src":"2990:9:5"}],"name":"add","nameLocation":"2889:3:5","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"_allocPoint","nameLocation":"2911:11:5","nodeType":"VariableDeclaration","scope":970,"src":"2903:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"_lpToken","nameLocation":"2940:8:5","nodeType":"VariableDeclaration","scope":970,"src":"2933:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"},"typeName":{"id":927,"nodeType":"UserDefinedTypeName","pathNode":{"id":926,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2933:6:5"},"referencedDeclaration":777,"src":"2933:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"_withUpdate","nameLocation":"2964:11:5","nodeType":"VariableDeclaration","scope":970,"src":"2959:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"2959:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2892:90:5"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"3000:0:5"},"scope":1539,"src":"2880:621:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1005,"nodeType":"Block","src":"3721:254:5","statements":[{"condition":{"id":981,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"3736:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":986,"nodeType":"IfStatement","src":"3732:61:5","trueBody":{"id":985,"nodeType":"Block","src":"3749:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3764:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3764:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"ExpressionStatement","src":"3764:17:5"}]}},{"expression":{"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3803:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3834:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":989,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3865:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":991,"indexExpression":{"id":990,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3874:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3865:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"id":992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":841,"src":"3865:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3834:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":994,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3906:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3834:83:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:114:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":997,"nodeType":"ExpressionStatement","src":"3803:114:5"},{"expression":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":998,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3928:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1000,"indexExpression":{"id":999,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3937:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3928:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"id":1001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":841,"src":"3928:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1002,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3956:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3928:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1004,"nodeType":"ExpressionStatement","src":"3928:39:5"}]},"functionSelector":"64482f79","id":1006,"implemented":true,"kind":"function","modifiers":[{"id":979,"kind":"modifierInvocation","modifierName":{"id":978,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3711:9:5"},"nodeType":"ModifierInvocation","src":"3711:9:5"}],"name":"set","nameLocation":"3613:3:5","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"_pid","nameLocation":"3635:4:5","nodeType":"VariableDeclaration","scope":1006,"src":"3627:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"_allocPoint","nameLocation":"3658:11:5","nodeType":"VariableDeclaration","scope":1006,"src":"3650:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"_withUpdate","nameLocation":"3685:11:5","nodeType":"VariableDeclaration","scope":1006,"src":"3680:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":975,"name":"bool","nodeType":"ElementaryTypeName","src":"3680:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3616:87:5"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"3721:0:5"},"scope":1539,"src":"3604:371:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1019,"nodeType":"Block","src":"4157:37:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4175:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1016,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4181:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4175:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1014,"id":1018,"nodeType":"Return","src":"4168:18:5"}]},"functionSelector":"8dbb1e3a","id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"getMultiplier","nameLocation":"4060:13:5","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"_from","nameLocation":"4092:5:5","nodeType":"VariableDeclaration","scope":1020,"src":"4084:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"4084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"_to","nameLocation":"4116:3:5","nodeType":"VariableDeclaration","scope":1020,"src":"4108:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4073:53:5"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1020,"src":"4148:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4148:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4147:9:5"},"scope":1539,"src":"4051:143:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"4379:846:5","statements":[{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"pool","nameLocation":"4407:4:5","nodeType":"VariableDeclaration","scope":1117,"src":"4390:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"},"typeName":{"id":1030,"nodeType":"UserDefinedTypeName","pathNode":{"id":1029,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"4390:8:5"},"referencedDeclaration":846,"src":"4390:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"visibility":"internal"}],"id":1035,"initialValue":{"baseExpression":{"id":1032,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"4414:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1034,"indexExpression":{"id":1033,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4423:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4414:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4390:38:5"},{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"user","nameLocation":"4456:4:5","nodeType":"VariableDeclaration","scope":1117,"src":"4439:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"},"typeName":{"id":1037,"nodeType":"UserDefinedTypeName","pathNode":{"id":1036,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":836,"src":"4439:8:5"},"referencedDeclaration":836,"src":"4439:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"}},"visibility":"internal"}],"id":1044,"initialValue":{"baseExpression":{"baseExpression":{"id":1039,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4463:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"}},"id":1041,"indexExpression":{"id":1040,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4472:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4463:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$","typeString":"mapping(address => struct MasterChef.UserInfo storage ref)"}},"id":1043,"indexExpression":{"id":1042,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"4478:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4463:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage","typeString":"struct MasterChef.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4439:45:5"},{"assignments":[1046],"declarations":[{"constant":false,"id":1046,"mutability":"mutable","name":"accRewardTokenPerShare","nameLocation":"4503:22:5","nodeType":"VariableDeclaration","scope":1117,"src":"4495:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4495:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"expression":{"id":1047,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4528:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"4528:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4495:60:5"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"lpSupply","nameLocation":"4574:8:5","nodeType":"VariableDeclaration","scope":1117,"src":"4566:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[{"arguments":[{"id":1057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4616:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4608:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"4608:7:5","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":1052,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4585:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":839,"src":"4585:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"4585:22:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4585:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1061,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4637:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4637:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1063,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4652:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"4652:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4637:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4676:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4688:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4676:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4637:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"4633:489:5","trueBody":{"id":1103,"nodeType":"Block","src":"4691:431:5","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"multiplier","nameLocation":"4714:10:5","nodeType":"VariableDeclaration","scope":1103,"src":"4706:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"4706:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1078,"initialValue":{"arguments":[{"expression":{"id":1073,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4759:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"4759:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1075,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4798:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4798:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4727:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4727:98:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4706:119:5"},{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"rewardTokenAmount","nameLocation":"4848:17:5","nodeType":"VariableDeclaration","scope":1103,"src":"4840:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"4840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1090,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4869:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1082,"name":"rewardTokenPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"4899:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4869:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1084,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4938:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":841,"src":"4938:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4869:84:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4868:86:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1088,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4957:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4868:104:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4840:132:5"},{"expression":{"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1091,"name":"accRewardTokenPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4987:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"accRewardTokenPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5029:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1093,"name":"rewardTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5073:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"5073:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5072:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1097,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"5101:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5071:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5029:81:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4987:123:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1102,"nodeType":"ExpressionStatement","src":"4987:123:5"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1105,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5154:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"5154:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"accRewardTokenPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5168:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5153:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5194:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"5153:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5152:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1113,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5202:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"5202:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5152:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1028,"id":1116,"nodeType":"Return","src":"5132:85:5"}]},"functionSelector":"1653fd33","id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRewardToken","nameLocation":"4274:18:5","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"_pid","nameLocation":"4311:4:5","nodeType":"VariableDeclaration","scope":1118,"src":"4303:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4303:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"_user","nameLocation":"4334:5:5","nodeType":"VariableDeclaration","scope":1118,"src":"4326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"4326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4292:54:5"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"4370:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"4370:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4369:9:5"},"scope":1539,"src":"4265:960:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1142,"nodeType":"Block","src":"5342:146:5","statements":[{"assignments":[1122],"declarations":[{"constant":false,"id":1122,"mutability":"mutable","name":"length","nameLocation":"5361:6:5","nodeType":"VariableDeclaration","scope":1142,"src":"5353:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1125,"initialValue":{"expression":{"id":1123,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"5370:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5370:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5353:32:5"},{"body":{"id":1140,"nodeType":"Block","src":"5439:42:5","statements":[{"expression":{"arguments":[{"id":1137,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5465:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5454:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5454:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"5454:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5418:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1131,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5424:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5418:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1141,"initializationExpression":{"assignments":[1127],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"pid","nameLocation":"5409:3:5","nodeType":"VariableDeclaration","scope":1141,"src":"5401:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5401:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1129,"initialValue":{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5415:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5401:15:5"},"loopExpression":{"expression":{"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5432:5:5","subExpression":{"id":1133,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5434:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ExpressionStatement","src":"5432:5:5"},"nodeType":"ForStatement","src":"5396:85:5"}]},"functionSelector":"630b5ba1","id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"5317:15:5","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"5332:2:5"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[],"src":"5342:0:5"},"scope":1539,"src":"5308:180:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1240,"nodeType":"Block","src":"5605:784:5","statements":[{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"pool","nameLocation":"5633:4:5","nodeType":"VariableDeclaration","scope":1240,"src":"5616:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"},"typeName":{"id":1149,"nodeType":"UserDefinedTypeName","pathNode":{"id":1148,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"5616:8:5"},"referencedDeclaration":846,"src":"5616:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"visibility":"internal"}],"id":1154,"initialValue":{"baseExpression":{"id":1151,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"5640:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1153,"indexExpression":{"id":1152,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5649:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5640:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5616:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1155,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5669:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1157,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5685:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"5685:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5669:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"5665:75:5","trueBody":{"id":1161,"nodeType":"Block","src":"5707:33:5","statements":[{"functionReturnParameters":1147,"id":1160,"nodeType":"Return","src":"5722:7:5"}]}},{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"lpSupply","nameLocation":"5758:8:5","nodeType":"VariableDeclaration","scope":1240,"src":"5750:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"arguments":[{"arguments":[{"id":1170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5800:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5792:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"5792:7:5","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5792:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":1165,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5769:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":839,"src":"5769:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":734,"src":"5769:22:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5769:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5750:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5821:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5833:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5821:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1186,"nodeType":"IfStatement","src":"5817:102:5","trueBody":{"id":1185,"nodeType":"Block","src":"5836:83:5","statements":[{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1177,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5851:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"5851:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1180,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5874:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5851:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"5851:35:5"},{"functionReturnParameters":1147,"id":1184,"nodeType":"Return","src":"5901:7:5"}]}},{"assignments":[1188],"declarations":[{"constant":false,"id":1188,"mutability":"mutable","name":"multiplier","nameLocation":"5937:10:5","nodeType":"VariableDeclaration","scope":1240,"src":"5929:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"5929:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"expression":{"id":1190,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5964:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"5964:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1192,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5986:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5986:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5950:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5950:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5929:70:5"},{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"rewardTokenAmount","nameLocation":"6018:17:5","nodeType":"VariableDeclaration","scope":1240,"src":"6010:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6010:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6039:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1199,"name":"rewardTokenPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6065:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6039:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1201,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6100:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":841,"src":"6100:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6039:76:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6038:78:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1205,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6119:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:96:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6010:124:5"},{"expression":{"arguments":[{"arguments":[{"id":1213,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6172:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}],"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6164:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"6164:7:5","typeDescriptions":{}}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6164:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"rewardTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6179:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1208,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6147:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"6147:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6147:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1217,"nodeType":"ExpressionStatement","src":"6147:50:5"},{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1218,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6210:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"6210:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1221,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6253:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"6253:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"rewardTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6298:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6318:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"6298:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6297:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1227,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6326:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6297:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6296:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6253:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6210:125:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ExpressionStatement","src":"6210:125:5"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1233,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6346:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":843,"src":"6346:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1236,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6369:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6369:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6346:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1239,"nodeType":"ExpressionStatement","src":"6346:35:5"}]},"functionSelector":"51eb05a6","id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"5573:10:5","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"_pid","nameLocation":"5592:4:5","nodeType":"VariableDeclaration","scope":1241,"src":"5584:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5584:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5583:14:5"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"5605:0:5"},"scope":1539,"src":"5564:825:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1342,"nodeType":"Block","src":"6520:619:5","statements":[{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"pool","nameLocation":"6548:4:5","nodeType":"VariableDeclaration","scope":1342,"src":"6531:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"},"typeName":{"id":1249,"nodeType":"UserDefinedTypeName","pathNode":{"id":1248,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"6531:8:5"},"referencedDeclaration":846,"src":"6531:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"visibility":"internal"}],"id":1254,"initialValue":{"baseExpression":{"id":1251,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6555:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1253,"indexExpression":{"id":1252,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"6564:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6555:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6531:38:5"},{"assignments":[1257],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"user","nameLocation":"6597:4:5","nodeType":"VariableDeclaration","scope":1342,"src":"6580:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":836,"src":"6580:8:5"},"referencedDeclaration":836,"src":"6580:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"}},"visibility":"internal"}],"id":1264,"initialValue":{"baseExpression":{"baseExpression":{"id":1258,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"6604:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"}},"id":1260,"indexExpression":{"id":1259,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"6613:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6604:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$","typeString":"mapping(address => struct MasterChef.UserInfo storage ref)"}},"id":1263,"indexExpression":{"expression":{"id":1261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6619:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6619:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6604:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage","typeString":"struct MasterChef.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6580:50:5"},{"expression":{"arguments":[{"id":1266,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"6652:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1265,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"6641:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6641:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"6641:16:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1269,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6672:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"6672:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6686:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6672:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1295,"nodeType":"IfStatement","src":"6668:208:5","trueBody":{"id":1294,"nodeType":"Block","src":"6689:187:5","statements":[{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"pending","nameLocation":"6712:7:5","nodeType":"VariableDeclaration","scope":1294,"src":"6704:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"6704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1275,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6724:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"6724:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1277,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6738:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"6738:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6724:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6723:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6786:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"6723:67:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6722:69:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1284,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6794:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"6794:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6722:87:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6704:105:5"},{"expression":{"arguments":[{"expression":{"id":1289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6844:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6844:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6856:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"rewardTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"6824:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6824:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"6824:40:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6920:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6920:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6912:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"6912:7:5","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6912:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1308,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6941:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}],"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6933:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"6933:7:5","typeDescriptions":{}}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6933:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1310,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6948:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1296,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6886:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":839,"src":"6886:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":776,"src":"6886:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6886:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1312,"nodeType":"ExpressionStatement","src":"6886:70:5"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1313,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6967:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"6967:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1316,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6981:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"6981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1318,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6995:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6967:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1321,"nodeType":"ExpressionStatement","src":"6967:35:5"},{"expression":{"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1322,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7013:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"7013:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1325,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7032:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7032:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1327,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7046:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"7046:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7032:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7031:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7077:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"7031:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7013:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ExpressionStatement","src":"7013:68:5"},{"eventCall":{"arguments":[{"expression":{"id":1336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7105:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7105:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1338,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"7117:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1339,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1335,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"7097:7:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"EmitStatement","src":"7092:39:5"}]},"functionSelector":"e2bbb158","id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"6474:7:5","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"_pid","nameLocation":"6490:4:5","nodeType":"VariableDeclaration","scope":1343,"src":"6482:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"6482:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"_amount","nameLocation":"6504:7:5","nodeType":"VariableDeclaration","scope":1343,"src":"6496:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6481:31:5"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[],"src":"6520:0:5"},"scope":1539,"src":"6465:674:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1442,"nodeType":"Block","src":"7247:612:5","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"pool","nameLocation":"7275:4:5","nodeType":"VariableDeclaration","scope":1442,"src":"7258:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"},"typeName":{"id":1351,"nodeType":"UserDefinedTypeName","pathNode":{"id":1350,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"7258:8:5"},"referencedDeclaration":846,"src":"7258:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"visibility":"internal"}],"id":1356,"initialValue":{"baseExpression":{"id":1353,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"7282:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1355,"indexExpression":{"id":1354,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7291:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7282:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7258:38:5"},{"assignments":[1359],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"user","nameLocation":"7324:4:5","nodeType":"VariableDeclaration","scope":1442,"src":"7307:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":836,"src":"7307:8:5"},"referencedDeclaration":836,"src":"7307:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"}},"visibility":"internal"}],"id":1366,"initialValue":{"baseExpression":{"baseExpression":{"id":1360,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"7331:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"}},"id":1362,"indexExpression":{"id":1361,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7340:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7331:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$","typeString":"mapping(address => struct MasterChef.UserInfo storage ref)"}},"id":1365,"indexExpression":{"expression":{"id":1363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7346:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7346:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7331:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage","typeString":"struct MasterChef.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7307:50:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1368,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7376:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7376:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1370,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7376:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261773a206e6f7420676f6f64","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7400:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df","typeString":"literal_string \"withdraw: not good\""},"value":"withdraw: not good"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df","typeString":"literal_string \"withdraw: not good\""}],"id":1367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7368:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7368:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"ExpressionStatement","src":"7368:53:5"},{"expression":{"arguments":[{"id":1376,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7443:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7432:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7432:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"7432:16:5"},{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"pending","nameLocation":"7467:7:5","nodeType":"VariableDeclaration","scope":1442,"src":"7459:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1393,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1381,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7479:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7479:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1383,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"7493:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"7493:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7479:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7478:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7524:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"7478:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7477:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1390,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7545:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"7545:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7477:83:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7459:101:5"},{"expression":{"arguments":[{"expression":{"id":1395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7593:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7593:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1397,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1394,"name":"rewardTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"7573:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7573:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"7573:40:5"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1400,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7624:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7624:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1403,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7638:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7638:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1405,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7638:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7624:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"7624:35:5"},{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1409,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7670:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"7670:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1412,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7689:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"7689:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1414,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"7703:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"accRewardTokenPerShare","nodeType":"MemberAccess","referencedDeclaration":845,"src":"7703:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7734:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"7688:50:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7670:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"7670:68:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7779:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7779:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7771:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"7771:7:5","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7771:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7792:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1422,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"7749:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":839,"src":"7749:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":744,"src":"7749:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7749:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"ExpressionStatement","src":"7749:51:5"},{"eventCall":{"arguments":[{"expression":{"id":1436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7825:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7825:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7837:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1439,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7843:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1435,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"7816:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7816:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1441,"nodeType":"EmitStatement","src":"7811:40:5"}]},"functionSelector":"441a3e70","id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7200:8:5","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"_pid","nameLocation":"7217:4:5","nodeType":"VariableDeclaration","scope":1443,"src":"7209:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7209:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"_amount","nameLocation":"7231:7:5","nodeType":"VariableDeclaration","scope":1443,"src":"7223:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7208:31:5"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"7247:0:5"},"scope":1539,"src":"7191:668:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1499,"nodeType":"Block","src":"7978:304:5","statements":[{"assignments":[1450],"declarations":[{"constant":false,"id":1450,"mutability":"mutable","name":"pool","nameLocation":"8006:4:5","nodeType":"VariableDeclaration","scope":1499,"src":"7989:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"},"typeName":{"id":1449,"nodeType":"UserDefinedTypeName","pathNode":{"id":1448,"name":"PoolInfo","nodeType":"IdentifierPath","referencedDeclaration":846,"src":"7989:8:5"},"referencedDeclaration":846,"src":"7989:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo"}},"visibility":"internal"}],"id":1454,"initialValue":{"baseExpression":{"id":1451,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8013:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$846_storage_$dyn_storage","typeString":"struct MasterChef.PoolInfo storage ref[] storage ref"}},"id":1453,"indexExpression":{"id":1452,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8022:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8013:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage","typeString":"struct MasterChef.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7989:38:5"},{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"user","nameLocation":"8055:4:5","nodeType":"VariableDeclaration","scope":1499,"src":"8038:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"UserInfo","nodeType":"IdentifierPath","referencedDeclaration":836,"src":"8038:8:5"},"referencedDeclaration":836,"src":"8038:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo"}},"visibility":"internal"}],"id":1464,"initialValue":{"baseExpression":{"baseExpression":{"id":1458,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8062:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"}},"id":1460,"indexExpression":{"id":1459,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8071:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8062:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$836_storage_$","typeString":"mapping(address => struct MasterChef.UserInfo storage ref)"}},"id":1463,"indexExpression":{"expression":{"id":1461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8077:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8077:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8062:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage","typeString":"struct MasterChef.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8038:50:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8129:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8129:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8121:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"8121:7:5","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1475,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8142:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"8142:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1465,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"8099:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$846_storage_ptr","typeString":"struct MasterChef.PoolInfo storage pointer"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":839,"src":"8099:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$777","typeString":"contract IERC20"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":744,"src":"8099:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8099:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"ExpressionStatement","src":"8099:55:5"},{"eventCall":{"arguments":[{"expression":{"id":1480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8188:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8188:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8200:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1483,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8206:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"8206:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1479,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"8170:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8170:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"EmitStatement","src":"8165:53:5"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1487,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8229:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":833,"src":"8229:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8229:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"8229:15:5"},{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1493,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8255:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$836_storage_ptr","typeString":"struct MasterChef.UserInfo storage pointer"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":835,"src":"8255:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8273:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8255:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"8255:19:5"}]},"functionSelector":"5312ea8e","id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"7939:17:5","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"_pid","nameLocation":"7965:4:5","nodeType":"VariableDeclaration","scope":1500,"src":"7957:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"7957:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7956:14:5"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"7978:0:5"},"scope":1539,"src":"7930:352:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1537,"nodeType":"Block","src":"8473:267:5","statements":[{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"rewardTokenBalance","nameLocation":"8492:18:5","nodeType":"VariableDeclaration","scope":1537,"src":"8484:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"8484:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1516,"initialValue":{"arguments":[{"arguments":[{"id":1513,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8543:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MasterChef_$1539","typeString":"contract MasterChef"}],"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8535:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:5","typeDescriptions":{}}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8535:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1509,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8513:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":211,"src":"8513:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8513:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8484:65:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"8564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1518,"name":"rewardTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8574:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8564:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1535,"nodeType":"Block","src":"8672:61:5","statements":[{"expression":{"arguments":[{"id":1531,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8708:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"8713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1528,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8687:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":236,"src":"8687:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8687:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"ExpressionStatement","src":"8687:34:5"}]},"id":1536,"nodeType":"IfStatement","src":"8560:173:5","trueBody":{"id":1527,"nodeType":"Block","src":"8594:72:5","statements":[{"expression":{"arguments":[{"id":1523,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8630:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1524,"name":"rewardTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8635:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1520,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8609:11:5","typeDescriptions":{"typeIdentifier":"t_contract$_RewardToken_$1643","typeString":"contract RewardToken"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":236,"src":"8609:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8609:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"ExpressionStatement","src":"8609:45:5"}]}}]},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"rewardTokenTransfer","nameLocation":"8414:19:5","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"_to","nameLocation":"8442:3:5","nodeType":"VariableDeclaration","scope":1538,"src":"8434:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"8434:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"_amount","nameLocation":"8455:7:5","nodeType":"VariableDeclaration","scope":1538,"src":"8447:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"8447:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8433:30:5"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"8473:0:5"},"scope":1539,"src":"8405:335:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1540,"src":"212:8531:5","usedErrors":[]}],"src":"35:8710:5"}},"contracts/yieldFarming/tokens/LPToken.sol":{"id":6,"ast":{"absolutePath":"contracts/yieldFarming/tokens/LPToken.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"LPToken":[1591]},"id":1592,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"40:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1592,"sourceUnit":700,"src":"67:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1543,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"146:5:6"},"id":1544,"nodeType":"InheritanceSpecifier","src":"146:5:6"}],"canonicalName":"LPToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1591,"linearizedBaseContracts":[1591,699,802,777,824],"name":"LPToken","nameLocation":"135:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1546,"mutability":"mutable","name":"_decimals","nameLocation":"173:9:6","nodeType":"VariableDeclaration","scope":1591,"src":"159:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1545,"name":"uint8","nodeType":"ElementaryTypeName","src":"159:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":1563,"nodeType":"Block","src":"320:40:6","statements":[{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1559,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"331:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1560,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"343:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"331:21:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1562,"nodeType":"ExpressionStatement","src":"331:21:6"}]},"id":1564,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1555,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"304:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1556,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"311:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1557,"kind":"baseConstructorSpecifier","modifierName":{"id":1554,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"298:5:6"},"nodeType":"ModifierInvocation","src":"298:21:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"decimals_","nameLocation":"219:9:6","nodeType":"VariableDeclaration","scope":1564,"src":"213:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1547,"name":"uint8","nodeType":"ElementaryTypeName","src":"213:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"name_","nameLocation":"253:5:6","nodeType":"VariableDeclaration","scope":1564,"src":"239:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1549,"name":"string","nodeType":"ElementaryTypeName","src":"239:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"symbol_","nameLocation":"283:7:6","nodeType":"VariableDeclaration","scope":1564,"src":"269:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1551,"name":"string","nodeType":"ElementaryTypeName","src":"269:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"202:95:6"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"320:0:6"},"scope":1591,"src":"191:169:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1580,"nodeType":"Block","src":"434:60:6","statements":[{"expression":{"arguments":[{"id":1574,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"451:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1573,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"445:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"445:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"445:19:6"},{"expression":{"hexValue":"74727565","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1572,"id":1579,"nodeType":"Return","src":"475:11:6"}]},"functionSelector":"40c10f19","id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"377:4:6","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"_to","nameLocation":"390:3:6","nodeType":"VariableDeclaration","scope":1581,"src":"382:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"382:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"_amount","nameLocation":"403:7:6","nodeType":"VariableDeclaration","scope":1581,"src":"395:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"381:30:6"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"428:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1570,"name":"bool","nodeType":"ElementaryTypeName","src":"428:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"427:6:6"},"scope":1591,"src":"368:126:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[187],"body":{"id":1589,"nodeType":"Block","src":"559:35:6","statements":[{"expression":{"id":1587,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"577:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1586,"id":1588,"nodeType":"Return","src":"570:16:6"}]},"functionSelector":"313ce567","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"511:8:6","nodeType":"FunctionDefinition","overrides":{"id":1583,"nodeType":"OverrideSpecifier","overrides":[],"src":"534:8:6"},"parameters":{"id":1582,"nodeType":"ParameterList","parameters":[],"src":"519:2:6"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1590,"src":"552:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1584,"name":"uint8","nodeType":"ElementaryTypeName","src":"552:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"551:7:6"},"scope":1591,"src":"502:92:6","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1592,"src":"126:471:6","usedErrors":[]}],"src":"40:559:6"}},"contracts/yieldFarming/tokens/RewardToken.sol":{"id":7,"ast":{"absolutePath":"contracts/yieldFarming/tokens/RewardToken.sol","exportedSymbols":{"Context":[824],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802],"RewardToken":[1643]},"id":1644,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1593,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"40:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1644,"sourceUnit":700,"src":"67:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1595,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"150:5:7"},"id":1596,"nodeType":"InheritanceSpecifier","src":"150:5:7"}],"canonicalName":"RewardToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1643,"linearizedBaseContracts":[1643,699,802,777,824],"name":"RewardToken","nameLocation":"135:11:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1598,"mutability":"mutable","name":"_decimals","nameLocation":"177:9:7","nodeType":"VariableDeclaration","scope":1643,"src":"163:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1597,"name":"uint8","nodeType":"ElementaryTypeName","src":"163:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":1615,"nodeType":"Block","src":"324:40:7","statements":[{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1611,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"335:9:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1612,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"347:9:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"335:21:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1614,"nodeType":"ExpressionStatement","src":"335:21:7"}]},"id":1616,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1607,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"308:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1608,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"315:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1609,"kind":"baseConstructorSpecifier","modifierName":{"id":1606,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"302:5:7"},"nodeType":"ModifierInvocation","src":"302:21:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"decimals_","nameLocation":"223:9:7","nodeType":"VariableDeclaration","scope":1616,"src":"217:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1599,"name":"uint8","nodeType":"ElementaryTypeName","src":"217:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"name_","nameLocation":"257:5:7","nodeType":"VariableDeclaration","scope":1616,"src":"243:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1601,"name":"string","nodeType":"ElementaryTypeName","src":"243:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"symbol_","nameLocation":"287:7:7","nodeType":"VariableDeclaration","scope":1616,"src":"273:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1603,"name":"string","nodeType":"ElementaryTypeName","src":"273:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"206:95:7"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"324:0:7"},"scope":1643,"src":"195:169:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1632,"nodeType":"Block","src":"438:60:7","statements":[{"expression":{"arguments":[{"id":1626,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"455:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"460:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"449:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"449:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"ExpressionStatement","src":"449:19:7"},{"expression":{"hexValue":"74727565","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"486:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1624,"id":1631,"nodeType":"Return","src":"479:11:7"}]},"functionSelector":"40c10f19","id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"381:4:7","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"_to","nameLocation":"394:3:7","nodeType":"VariableDeclaration","scope":1633,"src":"386:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"_amount","nameLocation":"407:7:7","nodeType":"VariableDeclaration","scope":1633,"src":"399:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:30:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"432:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"432:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"431:6:7"},"scope":1643,"src":"372:126:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[187],"body":{"id":1641,"nodeType":"Block","src":"563:35:7","statements":[{"expression":{"id":1639,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"581:9:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1638,"id":1640,"nodeType":"Return","src":"574:16:7"}]},"functionSelector":"313ce567","id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"515:8:7","nodeType":"FunctionDefinition","overrides":{"id":1635,"nodeType":"OverrideSpecifier","overrides":[],"src":"538:8:7"},"parameters":{"id":1634,"nodeType":"ParameterList","parameters":[],"src":"523:2:7"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"556:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1636,"name":"uint8","nodeType":"ElementaryTypeName","src":"556:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"555:7:7"},"scope":1643,"src":"506:92:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1644,"src":"126:475:7","usedErrors":[]}],"src":"40:563:7"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_94:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_90\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2490, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2477, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr10, r0, stack-[5]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t4, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB2_4\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB2_6\n.BB2_4:\n.BB2_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r4\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_address:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\ncopy_array_from_storage_to_memory_string_2477:\n.func_begin7:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB7_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB7_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB7_4\n.BB7_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB7_4\n\tadd\t@CPI7_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB7_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB7_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB7_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_1[0], r2, r4\n\tjump.gt\t@.BB7_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_6\n\tst.1\t64, r2\n\tret\n.BB7_1:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tadd\t@CPI7_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nmapping_index_access_mapping_address_uint256_of_address_2490:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin10:\n\tand\t@CPI10_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_balanceOf:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI12_0[0], r2, r3\n\tjump.eq\t@.BB12_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI12_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB12_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_5\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_1[0], r0, r2\n\tsub.s!\t@CPI12_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_approve:\n.func_begin13:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI13_0[0], r3, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB13_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_transferFrom:\n.func_begin14:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI14_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB14_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB14_7\n\tjump\t@.BB14_1\n.BB14_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_6\n.BB14_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB14_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_increaseAllowance:\n.func_begin15:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI15_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB15_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI15_2[0], r1, r1\n\tjump.eq\t@.BB15_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB15_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t@CPI15_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_0[0], r0, r2\n\tsub.s!\t@CPI15_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_decreaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB17_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB18_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_0:\nCPI16_0:\n\t.cell 4294967295\nCPI0_1:\nCPI7_1:\nCPI8_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI12_3:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI7_2:\nCPI8_2:\nCPI15_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI7_3:\nCPI8_3:\nCPI15_12:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 961581904\nCPI0_8:\n\t.cell 2757214934\nCPI0_9:\n\t.cell 2757214935\nCPI0_10:\n\t.cell 2835717307\nCPI0_11:\n\t.cell 3714247998\nCPI0_12:\n\t.cell 961581905\nCPI0_13:\n\t.cell 1889567281\nCPI0_14:\n\t.cell 2514000705\nCPI0_15:\n\t.cell 404098524\nCPI0_16:\n\t.cell 404098525\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 826074471\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 157198259\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_0:\n\t.cell 18446744073709551616\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_2:\nCPI16_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI7_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI9_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_1:\nCPI16_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI12_4:\nCPI14_13:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI12_5:\nCPI14_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI12_6:\nCPI14_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI12_7:\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_8:\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\n\t.cell 10458117451882892562347801444352\nCPI12_9:\nCPI14_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI12_10:\nCPI14_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI12_11:\nCPI14_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI12_12:\nCPI14_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI13_4:\nCPI14_4:\nCPI15_4:\nCPI16_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI13_5:\nCPI14_5:\nCPI15_5:\nCPI16_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI13_6:\nCPI14_6:\nCPI15_6:\nCPI16_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI13_9:\nCPI14_9:\nCPI15_9:\nCPI16_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI13_10:\nCPI14_10:\nCPI15_10:\nCPI16_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI14_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI14_12:\n\t.cell 7922816251426433759354395033600\nCPI16_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI16_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\n","bytecode":{"object":"0002000000000002000700000000000200010000000103550000006001100270000001da0010019d0000008001000039000000400010043f00000001012001900000003a0000c13d0000000001000031000000040110008c000001a80000413d0000000101000367000000000101043b000000e001100270000001e10210009c0000008f0000a13d000001e20210009c000000b10000213d000001e60210009c000000dc0000613d000001e70210009c000000eb0000613d000001e80110009c000001a80000c13d0000000001000416000000000110004c000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000310004c00000000030000190000000003024019000001dc01100197000000000410004c000000000200a019000001dc0110009c00000000010300190000000001026019000000000110004c000001a80000c13d076203700000040f0000000002010019000000400100043d000700000001001d076202bb0000040f00000007040000290000000001410049000001da02000041000001da0310009c0000000001028019000001da0340009c000000000204401900000040022002100000006001100210000000000121019f000007630001042e0000000001000416000000000110004c000001a80000c13d00000000020000310000001f01200039000000200a00008a0000000004a1016f000000400100043d0000000003140019000000000443004b00000000040000190000000104004039000001db0530009c000000890000213d0000000104400190000000890000c13d000000400030043f0000001f0320018f00000001040003670000000505200272000000580000613d000000000600001900000005076002100000000008710019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b000000500000413d000000000630004c000000670000613d0000000505500210000000000454034f00000000055100190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000001dc03000041000000400420008c00000000040000190000000004034019000001dc05200197000000000650004c000000000300a019000001dc0550009c000000000304c019000000000330004c000001a80000c13d0000000034010434000001db0540009c000001a80000213d000000000221001900000000041400190000001f05400039000001dc06000041000000000725004b00000000070000190000000007068019000001dc05500197000001dc08200197000000000985004b0000000006008019000000000585013f000001dc0550009c00000000050700190000000005066019000000000550004c000001a80000c13d0000000005040433000001db0650009c000001620000a13d000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001e90210009c000000c90000a13d000001ea0210009c000000f90000613d000001eb0210009c000001140000613d000001ec0110009c000001a80000c13d0000000001000416000000000110004c000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000310004c00000000030000190000000003024019000001dc01100197000000000410004c000000000200a019000001dc0110009c00000000010300190000000001026019000000000110004c000001a80000c13d000000400100043d00000012020000390000000000210435000001da02000041000001da0310009c00000000010280190000004001100210000001ef011001c7000007630001042e000001e30210009c000001230000613d000001e40210009c000001320000613d000001e50110009c000001a80000c13d0000000001000416000000000110004c000001a80000c13d00000000010000310762031b0000040f000700000002001d076203ac0000040f0000000702000029076203be0000040f000000000101041a000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e000001ed0210009c000001410000613d000001ee0110009c000001a80000c13d0000000001000416000000000110004c000001a80000c13d0000000001000031076202d40000040f076204780000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d0000000001000031076202d40000040f0762061b0000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d0000000001000031076203060000040f076203cf0000040f000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000310004c00000000030000190000000003024019000001dc01100197000000000410004c000000000200a019000001dc0110009c00000000010300190000000001026019000000000110004c000001a80000c13d0000000201000039000000000101041a000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d0000000001000031076202eb0000040f076204e10000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d0000000001000031076202d40000040f076206b30000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d0000000001000031076202d40000040f076203e10000040f0000000101000039000000400200043d0000000000120435000001da01000041000001da0320009c00000000010240190000004001100210000001ef011001c7000007630001042e0000000001000416000000000110004c000001a80000c13d000000040100008a0000000001100031000001dc02000041000000000310004c00000000030000190000000003024019000001dc01100197000000000410004c000000000200a019000001dc0110009c00000000010300190000000001026019000000000110004c000001a80000c13d076203340000040f0000000002010019000000400100043d000700000001001d076202bb0000040f00000007040000290000000001410049000001da02000041000001da0310009c0000000001028019000001da0340009c000000000204401900000040022002100000006001100210000000000121019f000007630001042e0000003f065000390000000006a6016f000000400b00043d00000000066b00190000000007b6004b00000000070000190000000107004039000001db0860009c000000890000213d0000000107700190000000890000c13d000000400060043f000000000c5b043600000020065000390000000007460019000000000727004b000001a80000213d000000000750004c000001810000613d000000000700001900000020077000390000000008b70019000000000947001900000000090904330000000000980435000000000857004b000001760000413d000000000457004b000001810000a13d00000000046b001900000000000404350000000003030433000001db0430009c000001a80000213d00000000011300190000001f03100039000001dc04000041000000000523004b00000000050000190000000005048019000001dc03300197000001dc06200197000000000763004b0000000004008019000000000363013f000001dc0330009c00000000030500190000000003046019000000000330004c000001a80000c13d0000000003010433000001db0430009c000000890000213d0000003f043000390000000004a4016f000000400700043d0000000004470019000000000574004b00000000050000190000000105004039000001db0640009c000000890000213d0000000105500190000000890000c13d000000400040043f000000000037043500000020043000390000000005140019000000000225004b000001aa0000a13d0000000001000019000007640001043000040000000c001d00070000000b001d00050000000a001d000000000230004c000001bb0000613d000000000200001900000020022000390000000005720019000000000612001900000000060604330000000000650435000000000532004b000001b00000413d000000000132004b000001bb0000a13d0000000001470019000000000001043500000007010000290000000001010433000600000001001d000001db0110009c000000890000213d000100000007001d0000000301000039000300000001001d000000000101041a000000010210019000000001011002700000007f0310018f0000000001036019000200000001001d0000001f0110008c00000000010000190000000101002039000000010110018f000000000112004b000001d50000613d000001df0100004100000000001004350000002201000039000000040010043f000001e00100004100000764000104300000000201000029000000200110008c000001f50000413d00000003010000290000000000100435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000001a80000613d00000006030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000002010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000001f50000813d000000000002041b0000000102200039000000000312004b000001f10000413d00000006010000290000001f0110008c000002270000a13d00000003010000290000000000100435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f000000010220019000000005020000290000000706000029000001a80000613d000000060300002900000000032301700000002002000039000000000101043b000002150000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000020d0000413d0000000604000029000000000343004b000002230000813d00000006030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000070400002900000000024200190000000002020433000000000232016f000000000021041b000000010100003900000006020000290000000102200210000002340000013d0000000601000029000000000110004c00000000010000190000022d0000613d0000000401000029000000000101043300000006040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000302000029000000000012041b00000001010000290762023e0000040f000000200100003900000100001004430000012000000443000001de01000041000007630001042e00050000000000020000000075010434000001f00250009c000002ad0000813d0000000404000039000000000304041a000000010230019000000001063002700000007f0360018f00000000060360190000001f0360008c00000000030000190000000103002039000000010330018f000000000232004b000002b30000c13d000300000001001d000000200160008c000500000004001d000400000005001d000002730000413d000100000006001d000200000007001d0000000000400435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000002b90000613d00000004050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b00000005040000290000000207000029000002730000813d000000000002041b0000000102200039000000000312004b0000026f0000413d0000001f0150008c000002a00000a13d0000000000400435000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001dd011001c700008010020000390762075d0000040f0000000102200190000002b90000613d000000200200008a000000040600002900000000032601700000002002000039000000000101043b0000000307000029000002910000613d0000002002000039000000000400001900000000057200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000002890000413d000000000363004b0000029c0000813d0000000303600210000000f80330018f000000010400008a000000000334022f000000000343013f00000000027200190000000002020433000000000232016f000000000021041b000000010160021000000001011001bf0000000504000029000002ab0000013d000000000150004c0000000001000019000002ab0000613d0000000301500210000000010200008a000000000112022f000000000121013f0000000002070433000000000112016f0000000102500210000000000121019f000000000014041b000000000001042d000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000000000100001900000764000104300000002003000039000000000431043600000000030204330000000000340435000000000430004c0000004001100039000002cf0000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b000002c30000413d000000000234004b000002cf0000a13d00000000023100190000000000020435000002cf0000013d0000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000000040110008a000001dc020000410000003f0310008c00000000030000190000000003022019000001dc01100197000000000410004c0000000002008019000001dc0110009c00000000010300190000000001026019000000000110004c000002e90000613d00000001020003670000000401200370000000000101043b000001f10310009c000002e90000213d0000002402200370000000000202043b000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000005f0310008c00000000030000190000000003022019000001dc01100197000000000410004c0000000002008019000001dc0110009c00000000010300190000000001026019000000000110004c000003040000613d00000001030003670000000401300370000000000101043b000001f10210009c000003040000213d0000002402300370000000000202043b000001f10420009c000003040000213d0000004403300370000000000303043b000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000001f0310008c00000000030000190000000003022019000001dc01100197000000000410004c0000000002008019000001dc0110009c00000000010300190000000001026019000000000110004c000003190000613d00000004010000390000000101100367000000000101043b000001f10210009c000003190000213d000000000001042d00000000010000190000076400010430000000040110008a000001dc020000410000003f0310008c00000000030000190000000003022019000001dc01100197000000000410004c0000000002008019000001dc0110009c00000000010300190000000001026019000000000110004c000003320000613d00000001020003670000000401200370000000000101043b000001f10310009c000003320000213d0000002402200370000000000202043b000001f10320009c000003320000213d000000000001042d000000000100001900000764000104300000000305000039000000000405041a000000010640019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000116004b000003640000c13d000000400100043d0000000003210436000000000660004c000003490000c13d000001000200008a000000000224016f000000000023043500000040040000390000035a0000013d00000000005004350000002004000039000000000520004c0000035a0000613d000001f204000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b0000034f0000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000001db0420009c0000036a0000213d00000001033001900000036a0000c13d000000400020043f000000000001042d000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000004101000039000000040010043f000001e00100004100000764000104300000000405000039000000000405041a000000010640019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000116004b000003a00000c13d000000400100043d0000000003210436000000000660004c000003850000c13d000001000200008a000000000224016f00000000002304350000004004000039000003960000013d00000000005004350000002004000039000000000520004c000003960000613d000001f304000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b0000038b0000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000001db0420009c000003a60000213d0000000103300190000003a60000c13d000000400020043f000000000001042d000001df0100004100000000001004350000002201000039000000040010043f000001e0010000410000076400010430000001df0100004100000000001004350000004101000039000000040010043f000001e0010000410000076400010430000001f10110019700000000001004350000000101000039000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003bc0000613d000000000101043b000000000001042d00000000010000190000076400010430000001f1022001970000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003cd0000613d000000000101043b000000000001042d00000000010000190000076400010430000001f1011001970000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000003df0000613d000000000101043b000000000101041a000000000001042d000000000100001900000764000104300006000000000002000600000002001d0000000002000411000001f103200198000004390000613d000200000002001d000300000001001d000001f101100198000500000001001d0000044e0000613d000400000003001d0000000000300435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000000101043b000000000201041a0000000601000029000100000002001d000000000112004b000004630000413d00000004010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000060200002900000001030000290000000002230049000000000101043b000000000021041b00000005010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004370000613d000000000101043b000000000201041a00000006030000290000000002320019000000000021041b000000400100043d0000000000310435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001f50400004100000002050000290000000306000029076207580000040f0000000101200190000004370000613d000000000001042d00000000010000190000076400010430000000400100043d0000006402100039000001fc0300004100000000003204350000004402100039000001fd030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001fa0300004100000000003204350000004402100039000001fb030000410000000000320435000000240210003900000023030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001f60300004100000000003204350000004402100039000001f7030000410000000000320435000000240210003900000026030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c7000007640001043000040000000000020000000003000411000001f104300198000004b70000613d000100000002001d000200000003001d000300000001001d000001f101100198000400000001001d000004cc0000613d00000000004004350000000101000039000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004b50000613d000000000101043b00000004020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000004b50000613d000000000101043b0000000102000029000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000002050000290000000306000029076207580000040f0000000101200190000004b50000613d000000000001042d00000000010000190000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300008000000000002000800000003001d000600000002001d000500000001001d000001f101100197000700000001001d00000000001004350000000101000039000300000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d0000000002000411000000000101043b000200000002001d000001f102200197000400000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a000000010100008a000000000112004b0000054b0000613d0000000801000029000000000112004b000005ca0000413d0000000701000029000000000110004c000005dc0000613d000100000002001d0000000401000029000000000110004c000005f10000613d000000070100002900000000001004350000000301000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b00000004020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000080200002900000001030000290000000002230049000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000005050000290000000206000029076207580000040f00000001012001900000054e0000c13d0000059e0000013d0000000701000029000000000110004c000006060000613d0000000601000029000001f101100198000400000001001d000005a00000613d00000007010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a0000000801000029000300000002001d000000000112004b000005b50000413d00000007010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000080200002900000003030000290000000002230049000000000101043b000000000021041b00000004010000290000000000100435000000200000043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f00000001022001900000059e0000613d000000000101043b000000000201041a00000008030000290000000002320019000000000021041b000000400100043d0000000000310435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001f50400004100000005050000290000000606000029076207580000040f00000001012001900000059e0000613d000000000001042d00000000010000190000076400010430000000400100043d0000006402100039000001fa0300004100000000003204350000004402100039000001fb030000410000000000320435000000240210003900000023030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001f60300004100000000003204350000004402100039000001f7030000410000000000320435000000240210003900000026030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d00000044021000390000020303000041000000000032043500000024021000390000001d030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c0000000001028019000000400110021000000204011001c70000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001fc0300004100000000003204350000004402100039000001fd030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300006000000000002000500000002001d000600000001001d0000000001000411000400000001001d00000000001004350000000101000039000200000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000000101043b0000000602000029000001f102200197000300000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000010200008a0000000503000029000000000223013f000000000101043b000000000301041a000000000123004b000006830000213d0000000401000029000001f101100198000006890000613d000100000003001d0000000302000029000000000220004c0000069e0000613d00000000001004350000000201000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000000101043b00000003020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000006810000613d000000050200002900000001030000290000000002230019000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000004050000290000000606000029076207580000040f0000000101200190000006810000613d000000000001042d00000000010000190000076400010430000001df0100004100000000001004350000001101000039000000040010043f000001e0010000410000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300006000000000002000500000002001d000600000001001d0000000001000411000400000001001d00000000001004350000000101000039000200000001001d000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b0000000602000029000001f102200197000300000002001d0000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b000000000201041a0000000501000029000000000112004b000007190000413d0000000401000029000001f1011001980000072e0000613d000100000002001d0000000302000029000000000220004c000007430000613d00000000001004350000000201000029000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000000101043b00000003020000290000000000200435000000200010043f000001da010000410000000002000414000001da0320009c0000000001024019000000c001100210000001f4011001c700008010020000390762075d0000040f0000000102200190000007170000613d000000050200002900000001030000290000000002230049000000000101043b000000000021041b000000400100043d0000000000210435000001da020000410000000003000414000001da0430009c0000000003028019000001da0410009c00000000010280190000004001100210000000c002300210000000000112019f000001dd011001c70000800d020000390000000303000039000001fe0400004100000004050000290000000606000029076207580000040f0000000101200190000007170000613d000000000001042d00000000010000190000076400010430000000400100043d000000640210003900000205030000410000000000320435000000440210003900000206030000410000000000320435000000240210003900000025030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d000000640210003900000201030000410000000000320435000000440210003900000202030000410000000000320435000000240210003900000024030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c70000076400010430000000400100043d0000006402100039000001ff030000410000000000320435000000440210003900000200030000410000000000320435000000240210003900000022030000390000000000320435000001f8020000410000000000210435000000040210003900000020030000390000000000320435000001da02000041000001da0310009c00000000010280190000004001100210000001f9011001c700000764000104300000075b002104210000000102000039000000000001042d0000000002000019000000000001042d00000760002104230000000102000039000000000001042d0000000002000019000000000001042d0000076200000432000007630001042e000007640001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000002000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000003950935000000000000000000000000000000000000000000000000000000000a457c2d600000000000000000000000000000000000000000000000000000000a457c2d700000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000dd62ed3e00000000000000000000000000000000000000000000000000000000395093510000000000000000000000000000000000000000000000000000000070a082310000000000000000000000000000000000000000000000000000000095d89b410000000000000000000000000000000000000000000000000000000018160ddc0000000000000000000000000000000000000000000000000000000018160ddd0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000313ce5670000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000095ea7b300000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0200000000000000000000000000000000000040000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef616c616e6365000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e742065786365656473206208c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f2061648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f2061646445524332303a20696e73756666696369656e7420616c6c6f77616e63650000000000000000000000000000000000000000000064000000000000000000000000207a65726f00000000000000000000000000000000000000000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f770000000000000000000000000000000000000000000000000000000000000000d5f2e2a75faeae8ba204d9b8635473eea16fd0c17c154a644a0dc2a6bb6f09c6"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_699\" {\n    code {\n        {\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_699\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2042:2055  \"_name = name_\" */ 0x03)), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC20_699_deployed\")\n            codecopy(_5, dataoffset(\"ERC20_699_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(0, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_699_deployed\" {\n        code {\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string_2477()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_2 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_2), memPos_5))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_3), memPos_6))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string()\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, converted_1), memPos_7))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_decreaseAllowance(param_7, param_8)\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_4), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_5 := fun_transfer(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_5), memPos_9))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ param_11), param_12))\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_uint256(memPos_10, _4), memPos_10))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 1:3173:3175  \"18\" */ 0x12)\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage_4048() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string_2477() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4048()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2490(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2491(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var_\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var_ := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if gt(_1, not(var_addedValue))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n                }\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(_1, var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2491(var_from), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2491(var_to)\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2490(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 1:1401:13011  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220c8ba9398ba18ccf0bff25c0a2fb4556e9e2d63a03175f1f8fa603bd1b66f69186c6578706572696d656e74616cf564736f6c634300080b0041\"\n    }\n}\n","hash":"01000209661082de31ec3148c831ca617fc75139310543d271d08bd389cd9221","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/yieldFarming/MasterChef.sol":{"MasterChef":{"abi":[{"inputs":[{"internalType":"contract RewardToken","name":"_rewardToken","type":"address"},{"internalType":"uint256","name":"_rewardTokenPerBlock","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_from","type":"uint256"},{"internalType":"uint256","name":"_to","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingRewardToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accRewardTokenPerShare","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract RewardToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardTokenPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardTokenPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewardToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardTokenPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/yieldFarming/MasterChef.sol\":\"MasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/yieldFarming/MasterChef.sol\":{\"keccak256\":\"0x5046436349d0646c5f7d5eb3f1dd4712c690142911e3c067f165d28918859c99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd18c1ef66136b571228b085aa84165d56eae922c4683d30ce5400277d0288c\",\"dweb:/ipfs/QmUXVqE6cbzaWwCGMcH6CJ4zFZ5Ub1b4WcgW6WyA6tjBPd\"]},\"contracts/yieldFarming/tokens/RewardToken.sol\":{\"keccak256\":\"0xc1d94f0ffb819971aa5f036d031fcb764cacc43ec068fc5face22529d826f1a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://39dc22e90fdab5f3e9e1d97bcdacbdb31bb266eddc58fae761fa6bc656a18c2b\",\"dweb:/ipfs/QmQ88oH8dzLa1zzixuaCDNBkbhFpoLbiuAfFxiUyeM1HfB\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MasterChef.sol:MasterChef\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_33\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.le\t@.BB0_28\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_69\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_71\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_91\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_91:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.le\t@.BB0_11\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.le\t@.BB0_15\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.le\t@.BB0_21\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.eq\t@.BB0_57\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_emergencyWithdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_33:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.le\t@.BB0_34\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_84\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_86\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.eq\t@.BB0_39\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @getter_fun_poolInfo, @DEFAULT_UNWIND\n\tadd\tr1, r0, r5\n\tadd\tr2, r0, r6\n\tadd\tr3, r0, r7\n\tadd\tr4, r0, r8\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr5, r0, r2\n\tadd\tr6, r0, r3\n\tadd\tr7, r0, r4\n\tadd\tr8, r0, r5\n\tnear_call\tr0, @abi_encode_contract_IERC20_uint256_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tld.1\t192, r3\n\tld.1\t160, r2\n\tnear_call\tr0, @constructor_MasterChef, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_28:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_massUpdatePools, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_50\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_withdraw, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_34:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_77\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @getter_fun_userInfo, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_30[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_69:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_979, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_updatePool, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_84:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_deposit, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_86:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_74, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_39:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_50:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_contract_IERC20t_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_933, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_77:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t4, r2, r2\n\tld\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_81\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_pendingRewardToken, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tsub\tr1, r2, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nconstructor_MasterChef:\n.func_begin1:\n\tnop\tstack+=[3]\n\tadd\tr3, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[1]\n\tsload\tr0, r1\n\tand\t@CPI1_0[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tsstore\tr0, r2\n\tld.1\t64, r2\n\tadd\t@CPI1_1[0], r0, r3\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_1[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI1_1[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r4, r3\n\tor\tr3, r2, r2\n\tand\t@CPI1_2[0], r1, r5\n\tor\t@CPI1_3[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI1_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_1\n\tadd\t5, r0, r1\n\tsstore\tr1, r0\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI1_2[0], r1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI1_0[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t2, r0, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tadd\t6, r0, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\ngetter_fun_poolInfo:\n.func_begin2:\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB2_1\n\tst.1\t0, r2\n\tshl.s\t2, r1, r1\n\tadd\t@CPI2_0[0], r1, r2\n\tsload\tr2, r2\n\tadd\t@CPI2_1[0], r1, r3\n\tsload\tr3, r3\n\tadd\t@CPI2_2[0], r1, r4\n\tsload\tr4, r4\n\tadd\t@CPI2_3[0], r1, r1\n\tsload\tr1, r1\n\tand\t@CPI2_4[0], r1, r1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_contract_IERC20_uint256_uint256_uint256:\n.func_begin3:\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI3_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end3:\n\nabi_decode_uint256t_address:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_uint256t_contract_IERC20t_bool:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tsub.s!\t0, r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB5_1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_uint256t_uint256:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_uint256t_uint256t_bool:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r3\n\tsub.s!\t0, r3, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB7_1\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ngetter_fun_userInfo:\n.func_begin8:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI8_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r2\n\tsload\tr2, r1\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_address:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmodifier_onlyOwner:\n.func_begin10:\n\tsload\tr0, r1\n\tand\t@CPI10_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB10_1\n\tand\t@CPI10_5[0], r1, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI10_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI10_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI10_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_3\n\tret\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI10_3[0], r0, r2\n\tsub.s!\t@CPI10_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmodifier_onlyOwner_74:\n.func_begin11:\n\tadd\tr1, r0, r6\n\tsload\tr0, r1\n\tand\t@CPI11_0[0], r1, r5\n\tcontext.caller\tr2\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB11_1\n\tand!\t@CPI11_0[0], r6, r2\n\tjump.eq\t@.BB11_3\n\tand\t@CPI11_5[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tadd\t@CPI11_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI11_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI11_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI11_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_5\n\tret\n.BB11_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI11_3[0], r0, r2\n\tsub.s!\t@CPI11_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_3[0], r0, r2\n\tsub.s!\t@CPI11_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmodifier_onlyOwner_933:\n.func_begin12:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI12_0[0], r1, r1\n\tcontext.caller\tr4\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB12_1\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB12_58\n\tadd\t3, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB12_58\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[7]\n\tjump\t@.BB12_5\n.BB12_28:\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_8\n.BB12_10:\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n.BB12_57:\n\tadd\tstack-[11], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[9], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ge\t@.BB12_58\n.BB12_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB12_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[11]\n\tshl.s\t2, r3, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI12_5[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tadd\t@CPI12_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_8\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB12_57\n\tsload\tr3, r2\n\tld.1\t64, r9\n\tadd\t@CPI12_9[0], r0, r1\n\tst.1\tr9, r1\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI12_0[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI12_0[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB12_13\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB12_23\n.BB12_13:\n\tadd\t@CPI12_3[0], r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI12_3[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI12_10[0], r1, r1\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI12_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB12_70\n\tadd\tr0, r0, r6\n.BB12_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB12_15\n.BB12_70:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB12_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB12_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_18\n.BB12_23:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI12_11[0], r1, r3\n\tjump.gt\t@.BB12_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB12_25\n\tst.1\t64, r1\n\tadd\t@CPI12_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI12_12[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI12_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB12_8\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB12_28\n\tadd\tr2, r0, stack-[4]\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_8\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB12_31\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB12_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB12_31\n.BB12_34:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t@CPI12_13[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB12_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB12_31\n.BB12_36:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB12_37\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI12_14[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[12], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI12_0[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB12_40\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB12_50\n.BB12_40:\n\tadd\tr5, r0, stack-[12]\n\tadd\t@CPI12_3[0], r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI12_3[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI12_15[0], r1, r1\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI12_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB12_68\n\tadd\tr0, r0, r6\n.BB12_42:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB12_42\n.BB12_68:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB12_44\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB12_44:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r5\n\tjump.eq\t@.BB12_45\n.BB12_50:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI12_11[0], r1, r3\n\tjump.gt\t@.BB12_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB12_25\n\tst.1\t64, r1\n\tadd\t@CPI12_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI12_12[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI12_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB12_8\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB12_8\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI12_16[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI12_17[0], r5, r3\n\tjump.gt\t@.BB12_31\n\tmul\t@CPI12_18[0], r5, r3, r4\n\tadd\tstack-[4], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB12_31\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB12_10\n\tjump\t@.BB12_8\n.BB12_58:\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_8\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB12_60\n\tadd\t@CPI12_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_8\n\tld\tr1, r4\n.BB12_60:\n\tsub.s\t1, r0, r1\n\tadd\tstack-[2], r0, r2\n\txor\tr2, r1, r3\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB12_31\n\tadd\tstack-[2], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r3\n\tsub.s!\t@CPI12_20[0], r3, r1\n\tjump.gt\t@.BB12_25\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tst.1\tr1, r4\n\tadd\t32, r3, r4\n\tadd\tstack-[2], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI12_0[0], r2, r2\n\tst.1\tr3, r2\n\tadd\t96, r3, r2\n\tst.1\tr2, r0\n\tadd\t3, r0, r6\n\tsload\tr6, r5\n\tsub.s!\t@CPI12_11[0], r5, r7\n\tjump.gt\t@.BB12_25\n\tadd\t1, r5, r7\n\tsstore\tr6, r7\n\tsload\tr6, r7\n\tsub!\tr7, r5, r7\n\tjump.le\t@.BB12_6\n\tst.1\t0, r6\n\tld.1\tr3, r3\n\tand\t@CPI12_0[0], r3, r3\n\tshl.s\t2, r5, r5\n\tadd\t@CPI12_8[0], r5, r6\n\tsload\tr6, r7\n\tand\t@CPI12_21[0], r7, r7\n\tor\tr7, r3, r3\n\tsstore\tr6, r3\n\tld.1\tr4, r3\n\tadd\t@CPI12_13[0], r5, r4\n\tsstore\tr4, r3\n\tld.1\tr1, r1\n\tadd\t@CPI12_5[0], r5, r3\n\tsstore\tr3, r1\n\tadd\t@CPI12_16[0], r5, r1\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tret\n.BB12_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_31:\n\tadd\t@CPI12_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_6:\n\tadd\t@CPI12_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_25:\n\tadd\t@CPI12_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_37:\n\tadd\t@CPI12_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_18:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB12_69\n\tadd\tr0, r0, r5\n.BB12_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB12_20\n.BB12_69:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB12_22\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB12_22:\n\tadd\t@CPI12_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_45:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB12_67\n\tadd\tr0, r0, r5\n.BB12_47:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB12_47\n.BB12_67:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB12_49\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB12_49:\n\tadd\t@CPI12_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI12_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmodifier_onlyOwner_979:\n.func_begin13:\n\tnop\tstack+=[13]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tsload\tr0, r1\n\tand\t@CPI13_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB13_1\n\tsub.s!\t0, r3, r1\n\tjump.eq\t@.BB13_58\n\tadd\t3, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_58\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[7]\n\tjump\t@.BB13_5\n.BB13_28:\n\tadd\t@CPI13_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_8\n.BB13_10:\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n.BB13_57:\n\tadd\tstack-[11], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[9], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ge\t@.BB13_58\n.BB13_5:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB13_6\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[11]\n\tshl.s\t2, r3, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI13_5[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI13_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tadd\t@CPI13_8[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_8\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB13_57\n\tsload\tr3, r2\n\tld.1\t64, r9\n\tadd\t@CPI13_9[0], r0, r1\n\tst.1\tr9, r1\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI13_0[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI13_0[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB13_13\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB13_23\n.BB13_13:\n\tadd\t@CPI13_3[0], r0, r3\n\tsub.s!\t@CPI13_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI13_3[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI13_10[0], r1, r1\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB13_66\n\tadd\tr0, r0, r6\n.BB13_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB13_15\n.BB13_66:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB13_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB13_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_18\n.BB13_23:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI13_11[0], r1, r3\n\tjump.gt\t@.BB13_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_25\n\tst.1\t64, r1\n\tadd\t@CPI13_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI13_12[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI13_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB13_8\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB13_28\n\tadd\tr2, r0, stack-[4]\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI13_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_8\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB13_31\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB13_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB13_31\n.BB13_34:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t@CPI13_13[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB13_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB13_31\n.BB13_36:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB13_37\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI13_14[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[12], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI13_0[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB13_40\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB13_50\n.BB13_40:\n\tadd\tr5, r0, stack-[12]\n\tadd\t@CPI13_3[0], r0, r3\n\tsub.s!\t@CPI13_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI13_3[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB13_64\n\tadd\tr0, r0, r6\n.BB13_42:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB13_42\n.BB13_64:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB13_44\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB13_44:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r5\n\tjump.eq\t@.BB13_45\n.BB13_50:\n\tadd\t31, r3, r1\n\tadd\tstack-[6], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI13_11[0], r1, r3\n\tjump.gt\t@.BB13_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_25\n\tst.1\t64, r1\n\tadd\t@CPI13_12[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI13_12[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI13_12[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB13_8\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB13_8\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI13_16[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI13_17[0], r5, r3\n\tjump.gt\t@.BB13_31\n\tmul\t@CPI13_18[0], r5, r3, r4\n\tadd\tstack-[4], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB13_31\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI13_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_10\n.BB13_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_58:\n\tadd\t5, r0, r2\n\tsload\tr2, r4\n\tadd\t3, r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[2], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.le\t@.BB13_6\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r3\n\tshl.s\t2, r3, r3\n\tadd\t@CPI13_13[0], r3, r3\n\tsload\tr3, r5\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB13_31\n\tsub\tr4, r5, r4\n\tsub.s\t1, r0, r5\n\tadd\tstack-[1], r0, r6\n\txor\tr6, r5, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB13_31\n\tadd\tstack-[1], r0, r5\n\tadd\tr4, r5, r4\n\tsstore\tr2, r4\n\tsload\tr1, r2\n\tadd\tstack-[2], r0, r4\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB13_6\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tsstore\tr3, r1\n\tret\n.BB13_31:\n\tadd\t@CPI13_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_6:\n\tadd\t@CPI13_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_25:\n\tadd\t@CPI13_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_37:\n\tadd\t@CPI13_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_18:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB13_65\n\tadd\tr0, r0, r5\n.BB13_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB13_20\n.BB13_65:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB13_22\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_22:\n\tadd\t@CPI13_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI13_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_45:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB13_63\n\tadd\tr0, r0, r5\n.BB13_47:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB13_47\n.BB13_63:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB13_49\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_49:\n\tadd\t@CPI13_3[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI13_3[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_pendingRewardToken:\n.func_begin14:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[4]\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB14_1\n\tst.1\t0, r1\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI14_2[0], r0, r4\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tshl.s\t2, r3, r3\n\tadd\tr3, r0, stack-[5]\n\tadd\t@CPI14_4[0], r3, r3\n\tadd\tr3, r0, stack-[2]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI14_5[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI14_6[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[2], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t@CPI14_7[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI14_5[0], r1, r1\n\tadd\t4, r9, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI14_5[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB14_7\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB14_17\n.BB14_7:\n\tadd\t@CPI14_2[0], r0, r3\n\tsub.s!\t@CPI14_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI14_2[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB14_41\n\tadd\tr0, r0, r6\n.BB14_9:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB14_9\n.BB14_41:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB14_11\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB14_11:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_12\n.BB14_17:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI14_8[0], r1, r3\n\tjump.gt\t@.BB14_19\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_19\n\tst.1\t64, r1\n\tadd\t@CPI14_9[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI14_9[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI14_9[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB14_3\n\tld.1\tr9, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tadd\t@CPI14_10[0], r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI14_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tsub!\tr1, r4, r1\n\tadd\tstack-[3], r0, r5\n\tjump.le\t@.BB14_36\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_36\n\tadd\t@CPI14_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_12[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_3\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r4\n\tsub!\tr3, r4, r1\n\tadd\tstack-[3], r0, r5\n\tjump.lt\t@.BB14_26\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB14_29\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB14_26\n.BB14_29:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[5], r0, r2\n\tadd\t@CPI14_13[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB14_31\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB14_26\n.BB14_31:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB14_32\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r1, r2\n\tsub.s!\t@CPI14_14[0], r1, r2\n\tjump.gt\t@.BB14_26\n\tmul\t@CPI14_15[0], r1, r1, r2\n\tadd\tstack-[1], r0, r2\n\tdiv\tr1, r2, r1, r2\n\tsub.s\t1, r0, r2\n\txor\tr1, r2, r2\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB14_26\n\tadd\tr1, r5, r5\n.BB14_36:\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB14_38\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r2, r3\n\tsub!\tr2, r5, r2\n\tjump.lt\t@.BB14_26\n.BB14_38:\n\tmul\tr1, r5, r1, r2\n\tdiv.s\t@CPI14_15[0], r1, r1, r2\n\tadd\tstack-[4], r0, r2\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB14_26\n\tsub\tr1, r2, r1\n\tret\n.BB14_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_26:\n\tadd\t@CPI14_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tadd\t@CPI14_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_19:\n\tadd\t@CPI14_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_12:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB14_40\n\tadd\tr0, r0, r5\n.BB14_14:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB14_14\n.BB14_40:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB14_16\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB14_16:\n\tadd\t@CPI14_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI14_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI14_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_32:\n\tadd\t@CPI14_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_massUpdatePools:\n.func_begin15:\n\tnop\tstack+=[11]\n\tadd\t3, r0, r2\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_54\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\tr0, r0, r3\n\tadd\tr2, r0, stack-[5]\n\tjump\t@.BB15_2\n.BB15_25:\n\tadd\t@CPI15_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_5\n.BB15_7:\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n.BB15_55:\n\tadd\tstack-[9], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[7], r0, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[5], r0, r2\n\tjump.ge\t@.BB15_54\n.BB15_2:\n\tsload\tr2, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB15_3\n\tst.1\t0, r2\n\tadd\tr3, r0, stack-[9]\n\tshl.s\t2, r3, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI15_2[0], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI15_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_5[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tadd\t@CPI15_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_5\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB15_55\n\tsload\tr3, r2\n\tld.1\t64, r9\n\tadd\t@CPI15_7[0], r0, r1\n\tst.1\tr9, r1\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI15_8[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI15_8[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_10\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB15_20\n.BB15_10:\n\tadd\t@CPI15_4[0], r0, r3\n\tsub.s!\t@CPI15_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI15_4[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB15_59\n\tadd\tr0, r0, r6\n.BB15_12:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB15_12\n.BB15_59:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB15_14\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB15_14:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_15\n.BB15_20:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_9[0], r1, r3\n\tjump.gt\t@.BB15_22\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_22\n\tst.1\t64, r1\n\tadd\t@CPI15_10[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_10[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI15_10[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB15_5\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB15_25\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI15_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_5\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB15_28\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB15_31\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB15_28\n.BB15_31:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[11], r0, r2\n\tadd\t@CPI15_11[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB15_33\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB15_28\n.BB15_33:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB15_34\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI15_12[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[10], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI15_8[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB15_37\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB15_47\n.BB15_37:\n\tadd\tr5, r0, stack-[10]\n\tadd\t@CPI15_4[0], r0, r3\n\tsub.s!\t@CPI15_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI15_4[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI15_13[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI15_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB15_57\n\tadd\tr0, r0, r6\n.BB15_39:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB15_39\n.BB15_57:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB15_41\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB15_41:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r5\n\tjump.eq\t@.BB15_42\n.BB15_47:\n\tadd\t31, r3, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI15_9[0], r1, r3\n\tjump.gt\t@.BB15_22\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_22\n\tst.1\t64, r1\n\tadd\t@CPI15_10[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI15_10[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI15_10[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB15_5\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB15_5\n\tadd\tstack-[11], r0, r1\n\tadd\t@CPI15_14[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI15_15[0], r5, r3\n\tjump.gt\t@.BB15_28\n\tmul\t@CPI15_16[0], r5, r3, r4\n\tadd\tstack-[2], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB15_28\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI15_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB15_7\n.BB15_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_54:\n\tret\n.BB15_28:\n\tadd\t@CPI15_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_3:\n\tadd\t@CPI15_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_22:\n\tadd\t@CPI15_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_34:\n\tadd\t@CPI15_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_15:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB15_58\n\tadd\tr0, r0, r5\n.BB15_17:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB15_17\n.BB15_58:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB15_19\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB15_19:\n\tadd\t@CPI15_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_42:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB15_56\n\tadd\tr0, r0, r5\n.BB15_44:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB15_44\n.BB15_56:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB15_46\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB15_46:\n\tadd\t@CPI15_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI15_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI15_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_updatePool:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB16_1\n\tst.1\t0, r2\n\tshl.s\t2, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI16_2[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI16_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tadd\t@CPI16_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_3\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB16_6\n\tsload\tr3, r2\n\tld.1\t64, r9\n\tadd\t@CPI16_7[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.this\tr1\n\tand\t@CPI16_8[0], r1, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[5]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI16_8[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_9\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB16_19\n.BB16_9:\n\tadd\t@CPI16_4[0], r0, r3\n\tsub.s!\t@CPI16_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI16_4[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB16_56\n\tadd\tr0, r0, r6\n.BB16_11:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB16_11\n.BB16_56:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB16_13\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB16_13:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_14\n.BB16_19:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_9[0], r1, r3\n\tjump.gt\t@.BB16_21\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_21\n\tst.1\t64, r1\n\tadd\t@CPI16_10[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_10[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI16_10[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB16_3\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB16_24\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI16_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_3\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB16_27\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB16_30\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB16_27\n.BB16_30:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[6], r0, r2\n\tadd\t@CPI16_11[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB16_32\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB16_27\n.BB16_32:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB16_33\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI16_12[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[5], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI16_8[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB16_36\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB16_46\n.BB16_24:\n\tadd\t@CPI16_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_5\n\tjump\t@.BB16_3\n.BB16_36:\n\tadd\tr5, r0, stack-[5]\n\tadd\t@CPI16_4[0], r0, r3\n\tsub.s!\t@CPI16_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI16_4[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI16_13[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI16_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB16_54\n\tadd\tr0, r0, r6\n.BB16_38:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB16_38\n.BB16_54:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB16_40\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB16_40:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB16_41\n.BB16_46:\n\tadd\t31, r3, r1\n\tadd\tstack-[3], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI16_9[0], r1, r3\n\tjump.gt\t@.BB16_21\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB16_21\n\tst.1\t64, r1\n\tadd\t@CPI16_10[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_10[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI16_10[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB16_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB16_3\n\tadd\tstack-[6], r0, r1\n\tadd\t@CPI16_14[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI16_15[0], r5, r3\n\tjump.gt\t@.BB16_27\n\tmul\t@CPI16_16[0], r5, r3, r4\n\tadd\tstack-[1], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB16_27\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI16_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI16_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_3\n.BB16_5:\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr2, r1\n.BB16_6:\n\tret\n.BB16_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_27:\n\tadd\t@CPI16_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_1:\n\tadd\t@CPI16_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_21:\n\tadd\t@CPI16_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_33:\n\tadd\t@CPI16_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_14:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB16_55\n\tadd\tr0, r0, r5\n.BB16_16:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB16_16\n.BB16_55:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB16_18\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB16_18:\n\tadd\t@CPI16_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_41:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB16_53\n\tadd\tr0, r0, r5\n.BB16_43:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB16_43\n.BB16_53:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB16_45\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB16_45:\n\tadd\t@CPI16_4[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI16_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI16_4[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_deposit:\n.func_begin17:\n\tnop\tstack+=[14]\n\tadd\tr2, r0, stack-[14]\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB17_1\n\tadd\tr3, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI17_0[0], r0, r4\n\tadd\tr1, r0, stack-[12]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tshl.s\t2, r3, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI17_2[0], r3, r3\n\tadd\tr3, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[7]\n\tand\t@CPI17_3[0], r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[8], r0, r3\n\tsload\tr3, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB17_1\n\tst.1\t0, r3\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI17_6[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI17_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsub!\tr1, r2, r1\n\tcontext.this\tr4\n\tjump.le\t@.BB17_55\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t@CPI17_9[0], r0, r1\n\tst.1\tr9, r1\n\tadd\tr4, r0, stack-[8]\n\tand\t@CPI17_3[0], r4, r4\n\tadd\t4, r9, r1\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI17_3[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[5]\n\tjump.ne\t@.BB17_11\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_21\n.BB17_11:\n\tadd\t@CPI17_0[0], r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI17_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI17_5[0], r1, r1\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_139\n\tadd\tr0, r0, r6\n.BB17_13:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_13\n.BB17_139:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_15\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_15:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_16\n.BB17_21:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI17_10[0], r1, r3\n\tjump.gt\t@.BB17_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r1\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB17_26\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI17_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB17_29\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB17_32\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB17_29\n.BB17_32:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t@CPI17_12[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB17_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB17_29\n.BB17_34:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB17_35\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI17_13[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[5], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI17_3[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB17_38\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_48\n.BB17_26:\n\tadd\t@CPI17_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB17_8\n\tjump\t@.BB17_3\n.BB17_38:\n\tadd\tr5, r0, stack-[5]\n\tadd\t@CPI17_0[0], r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI17_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI17_14[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_137\n\tadd\tr0, r0, r6\n.BB17_40:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_40\n.BB17_137:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_42\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_42:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB17_43\n.BB17_48:\n\tadd\t31, r3, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI17_10[0], r1, r3\n\tjump.gt\t@.BB17_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r1\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB17_3\n\tadd\tstack-[13], r0, r1\n\tadd\t@CPI17_15[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI17_16[0], r5, r3\n\tjump.gt\t@.BB17_29\n\tmul\t@CPI17_17[0], r5, r3, r4\n\tadd\tstack-[2], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB17_29\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI17_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_3\n.BB17_8:\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r4\n.BB17_55:\n\tadd\tstack-[11], r0, r3\n\tsload\tr3, r1\n\tsub.s!\t0, r1, r2\n\tadd\t1, r3, r5\n\tadd\tr5, r0, stack-[8]\n\tjump.eq\t@.BB17_56\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r3, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t@CPI17_15[0], r2, r2\n\tsload\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB17_29\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI17_17[0], r1, r10, r1\n\tsload\tr5, r12\n\tsub!\tr10, r12, r1\n\tjump.lt\t@.BB17_29\n\tadd\t1, r0, r11\n\tsload\tr11, r2\n\tld.1\t64, r13\n\tadd\t@CPI17_9[0], r0, r1\n\tst.1\tr13, r1\n\tand\t@CPI17_3[0], r4, r6\n\tadd\t4, r13, r1\n\tst.1\tr1, r6\n\tcontext.gas_left\tr1\n\tand\t@CPI17_3[0], r2, r8\n\tsub.s!\t4, r8, r2\n\tadd\tr6, r0, stack-[6]\n\tjump.ne\t@.BB17_61\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_71\n.BB17_56:\n\tld.1\t64, r10\n\tand\t@CPI17_3[0], r4, r6\n\tjump\t@.BB17_107\n.BB17_61:\n\tadd\tr12, r0, stack-[2]\n\tadd\tr11, r0, stack-[3]\n\tadd\tr10, r0, stack-[4]\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI17_0[0], r13, r3\n\tadd.lt\tr13, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI17_5[0], r1, r1\n\tadd\tr8, r0, stack-[5]\n\tadd\tr8, r0, r2\n\tadd\tr13, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r13\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_135\n\tadd\tr0, r0, r6\n.BB17_63:\n\tshl.s\t5, r6, r7\n\tadd\tr13, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_63\n.BB17_135:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_65\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr13, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_65:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r8\n\tadd\tstack-[4], r0, r10\n\tadd\tstack-[3], r0, r11\n\tadd\tstack-[2], r0, r12\n\tjump.eq\t@.BB17_66\n.BB17_71:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r7\n\tand\tr1, r7, r1\n\tadd\tr1, r13, r9\n\tsub!\tr9, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI17_10[0], r9, r2\n\tjump.gt\t@.BB17_23\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r9\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tsub\tr10, r12, r1\n\tld.1\tr13, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB17_75\n\tsload\tr11, r3\n\tadd\t36, r9, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_18[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI17_3[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB17_93\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_103\n.BB17_75:\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI17_18[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r8, r2\n\tjump.ne\t@.BB17_77\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_87\n.BB17_93:\n\tadd\tr7, r0, stack-[4]\n\tadd\t@CPI17_0[0], r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI17_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI17_14[0], r1, r1\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_131\n\tadd\tr0, r0, r6\n.BB17_95:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_95\n.BB17_131:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_97\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_97:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB17_98\n.BB17_103:\n\tadd\t31, r3, r1\n\tand\tr1, r7, r1\n\tadd\tr1, r9, r10\n\tsub!\tr10, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI17_10[0], r10, r2\n\tjump.gt\t@.BB17_23\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r10\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB17_107\n\tjump\t@.BB17_3\n.BB17_77:\n\tadd\tr7, r0, stack-[4]\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI17_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI17_14[0], r1, r1\n\tadd\tr8, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_133\n\tadd\tr0, r0, r6\n.BB17_79:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_79\n.BB17_133:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_81\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_81:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB17_82\n.BB17_87:\n\tadd\t31, r3, r1\n\tand\tr1, r7, r1\n\tadd\tr1, r9, r10\n\tsub!\tr10, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI17_10[0], r10, r2\n\tjump.gt\t@.BB17_23\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r10\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB17_3\n.BB17_107:\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r10, r1\n\tst.1\tr1, r6\n\tadd\t@CPI17_19[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI17_3[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB17_109\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB17_119\n.BB17_109:\n\tadd\t@CPI17_0[0], r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI17_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI17_20[0], r1, r1\n\tadd\tr10, r0, stack-[10]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI17_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB17_129\n\tadd\tr0, r0, r6\n.BB17_111:\n\tshl.s\t5, r6, r7\n\tadd\tr10, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB17_111\n.BB17_129:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB17_113\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr10, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB17_113:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB17_114\n.BB17_119:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI17_10[0], r1, r3\n\tjump.gt\t@.BB17_23\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB17_23\n\tst.1\t64, r1\n\tadd\t@CPI17_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI17_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI17_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB17_3\n\tld.1\tr10, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB17_3\n\tsub.s\t1, r0, r1\n\tadd\tstack-[14], r0, r2\n\txor\tr2, r1, r3\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB17_29\n\tadd\tstack-[14], r0, r3\n\tadd!\tr2, r3, r2\n\tadd\tstack-[11], r0, r3\n\tsstore\tr3, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t@CPI17_15[0], r3, r3\n\tsload\tr3, r3\n\tjump.eq\t@.BB17_126\n\tdiv\tr1, r2, r1, r4\n\tsub!\tr1, r3, r1\n\tjump.lt\t@.BB17_29\n.BB17_126:\n\tmul\tr3, r2, r1, r2\n\tdiv.s\t@CPI17_17[0], r1, r1, r2\n\tsstore\tr5, r1\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_21[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_22[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[12], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_3\n\tret\n.BB17_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_29:\n\tadd\t@CPI17_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_23:\n\tadd\t@CPI17_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_1:\n\tadd\t@CPI17_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_114:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_128\n\tadd\tr0, r0, r5\n.BB17_116:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_116\n.BB17_128:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_118\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_118:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_35:\n\tadd\t@CPI17_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_66:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_134\n\tadd\tr0, r0, r5\n.BB17_68:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_68\n.BB17_134:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_70\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_70:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_16:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_138\n\tadd\tr0, r0, r5\n.BB17_18:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_18\n.BB17_138:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_20\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_20:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_43:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_136\n\tadd\tr0, r0, r5\n.BB17_45:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_45\n.BB17_136:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_47\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_47:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_98:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_130\n\tadd\tr0, r0, r5\n.BB17_100:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_100\n.BB17_130:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_102\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_102:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_82:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB17_132\n\tadd\tr0, r0, r5\n.BB17_84:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB17_84\n.BB17_132:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB17_86\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB17_86:\n\tadd\t@CPI17_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_withdraw:\n.func_begin18:\n\tnop\tstack+=[13]\n\tadd\tr2, r0, stack-[13]\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB18_1\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI18_0[0], r0, r4\n\tadd\tr1, r0, stack-[11]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tshl.s\t2, r3, r3\n\tadd\tr3, r0, stack-[10]\n\tadd\t@CPI18_2[0], r3, r3\n\tadd\tr3, r0, stack-[8]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[6]\n\tand\t@CPI18_3[0], r2, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[7], r0, r3\n\tjump.lt\t@.BB18_6\n\tsload\tr3, r1\n\tadd\tstack-[11], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB18_1\n\tst.1\t0, r3\n\tadd\tstack-[10], r0, r1\n\tadd\t@CPI18_6[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI18_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r1\n\tcontext.this\tr5\n\tjump.le\t@.BB18_57\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t@CPI18_9[0], r0, r1\n\tst.1\tr9, r1\n\tand\t@CPI18_3[0], r5, r3\n\tadd\t4, r9, r1\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI18_3[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr5, r0, stack-[7]\n\tjump.ne\t@.BB18_13\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_23\n.BB18_13:\n\tadd\t@CPI18_0[0], r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI18_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_5[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_140\n\tadd\tr0, r0, r6\n.BB18_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_15\n.BB18_140:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_18\n.BB18_23:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r1\n\tjump.eq\t@.BB18_28\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI18_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r4\n\tsub!\tr3, r4, r1\n\tjump.lt\t@.BB18_31\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tsub\tr3, r4, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB18_34\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB18_31\n.BB18_34:\n\tmul!\tr1, r2, r1, r2\n\tadd\tstack-[10], r0, r2\n\tadd\t@CPI18_12[0], r2, r2\n\tsload\tr2, r2\n\tjump.eq\t@.BB18_36\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_31\n.BB18_36:\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB18_37\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tld.1\t64, r9\n\tadd\t@CPI18_13[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\tstack-[4], r0, r6\n\tst.1\tr5, r6\n\tmul\tr2, r1, r1, r2\n\tdiv\tr1, r3, r5, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI18_3[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_40\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_50\n.BB18_28:\n\tadd\t@CPI18_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r5\n\tjump.ne\t@.BB18_10\n\tjump\t@.BB18_3\n.BB18_40:\n\tadd\tr5, r0, stack-[4]\n\tadd\t@CPI18_0[0], r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI18_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_138\n\tadd\tr0, r0, r6\n.BB18_42:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_42\n.BB18_138:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_44\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_44:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r5\n\tjump.eq\t@.BB18_45\n.BB18_50:\n\tadd\t31, r3, r1\n\tadd\tstack-[3], r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB18_3\n\tadd\tstack-[10], r0, r1\n\tadd\t@CPI18_15[0], r1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI18_16[0], r5, r3\n\tjump.gt\t@.BB18_31\n\tmul\t@CPI18_17[0], r5, r3, r4\n\tadd\tstack-[1], r0, r4\n\tdiv\tr3, r4, r3, r4\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB18_31\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI18_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n.BB18_10:\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n.BB18_57:\n\tadd\tstack-[10], r0, r1\n\tadd\t@CPI18_15[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub.s!\t0, r2, r3\n\tjump.eq\t@.BB18_59\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.lt\t@.BB18_31\n.BB18_59:\n\tmul\tr1, r2, r1, r2\n\tdiv.s\t@CPI18_17[0], r1, r7, r1\n\tadd\tstack-[12], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r10\n\tsub!\tr7, r10, r1\n\tjump.lt\t@.BB18_31\n\tadd\t1, r0, r8\n\tsload\tr8, r2\n\tld.1\t64, r11\n\tadd\t@CPI18_9[0], r0, r1\n\tst.1\tr11, r1\n\tand\t@CPI18_3[0], r5, r1\n\tadd\t4, r11, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI18_3[0], r2, r6\n\tsub.s!\t4, r6, r2\n\tjump.ne\t@.BB18_62\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_72\n.BB18_62:\n\tadd\tr10, r0, stack-[2]\n\tadd\tr8, r0, stack-[3]\n\tadd\tr7, r0, stack-[4]\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_0[0], r11, r3\n\tadd.lt\tr11, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI18_5[0], r1, r1\n\tadd\tr6, r0, stack-[5]\n\tadd\tr6, r0, r2\n\tadd\tr11, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_136\n\tadd\tr0, r0, r6\n.BB18_64:\n\tshl.s\t5, r6, r7\n\tadd\tr11, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_64\n.BB18_136:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_66\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr11, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_66:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r8\n\tadd\tstack-[2], r0, r10\n\tjump.eq\t@.BB18_67\n.BB18_72:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r1\n\tadd\tr1, r11, r9\n\tsub!\tr9, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI18_10[0], r9, r2\n\tjump.gt\t@.BB18_25\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r9\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tsub\tr7, r10, r1\n\tld.1\tr11, r2\n\tsub!\tr2, r1, r3\n\tadd\tr5, r0, stack-[5]\n\tjump.ge\t@.BB18_76\n\tsload\tr8, r3\n\tadd\t36, r9, r1\n\tst.1\tr1, r2\n\tadd\t@CPI18_18[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI18_3[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_94\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_104\n.BB18_76:\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI18_18[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r2\n\tjump.ne\t@.BB18_78\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_88\n.BB18_94:\n\tadd\t@CPI18_0[0], r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI18_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_132\n\tadd\tr0, r0, r6\n.BB18_96:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_96\n.BB18_132:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_98\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_98:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB18_99\n.BB18_104:\n\tadd\t31, r3, r1\n\tand\tr1, r5, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.eq\t@.BB18_108\n\tjump\t@.BB18_3\n.BB18_78:\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI18_0[0], r9, r3\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\tr6, r0, r2\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_134\n\tadd\tr0, r0, r6\n.BB18_80:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_80\n.BB18_134:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_82\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_82:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB18_83\n.BB18_88:\n\tadd\t31, r3, r1\n\tand\tr1, r5, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t32, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI18_11[0], r2, r2\n\tsub.s!\t0, r2, r4\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI18_11[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r1\n\tsub.s!\t0, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB18_3\n.BB18_108:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB18_31\n\tadd\tstack-[13], r0, r4\n\tsub\tr3, r4, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r2\n\tsload\tr2, r2\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB18_111\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB18_31\n.BB18_111:\n\tmul\tr2, r1, r1, r2\n\tdiv.s\t@CPI18_17[0], r1, r1, r2\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r9\n\tadd\t36, r9, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI18_18[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI18_3[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB18_113\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB18_123\n.BB18_113:\n\tadd\t@CPI18_0[0], r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI18_0[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI18_14[0], r1, r1\n\tadd\tr9, r0, stack-[12]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI18_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB18_130\n\tadd\tr0, r0, r6\n.BB18_115:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB18_115\n.BB18_130:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB18_117\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB18_117:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tjump.eq\t@.BB18_118\n.BB18_123:\n\tadd\t31, r3, r1\n\tand\tr1, r5, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI18_10[0], r1, r3\n\tjump.gt\t@.BB18_25\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB18_25\n\tst.1\t64, r1\n\tadd\t@CPI18_11[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI18_11[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI18_11[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB18_3\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB18_3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI18_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_19[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_20[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[11], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_3\n\tret\n.BB18_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_31:\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_25:\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_67:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_135\n\tadd\tr0, r0, r5\n.BB18_69:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_69\n.BB18_135:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_71\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_71:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_118:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_129\n\tadd\tr0, r0, r5\n.BB18_120:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_120\n.BB18_129:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_122\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_122:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_37:\n\tadd\t@CPI18_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_18:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_139\n\tadd\tr0, r0, r5\n.BB18_20:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_20\n.BB18_139:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_22\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_22:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_99:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_131\n\tadd\tr0, r0, r5\n.BB18_101:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_101\n.BB18_131:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_103\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_103:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_83:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_133\n\tadd\tr0, r0, r5\n.BB18_85:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_85\n.BB18_133:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_87\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_87:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_45:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB18_137\n\tadd\tr0, r0, r5\n.BB18_47:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB18_47\n.BB18_137:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB18_49\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB18_49:\n\tadd\t@CPI18_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_emergencyWithdraw:\n.func_begin19:\n\tnop\tstack+=[4]\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB19_1\n\tst.1\t0, r1\n\tadd\t4, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI19_2[0], r0, r4\n\tadd\tr1, r0, stack-[4]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd\tr4, r0, r1\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tshl.s\t2, r3, r3\n\tadd\t@CPI19_4[0], r3, r3\n\tadd\tr3, r0, stack-[3]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_3\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI19_5[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI19_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_3\n\tadd\tstack-[3], r0, r2\n\tsload\tr2, r2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tld.1\t64, r9\n\tadd\t36, r9, r3\n\tst.1\tr3, r1\n\tadd\t@CPI19_6[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[2], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI19_5[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB19_7\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB19_17\n.BB19_7:\n\tadd\t@CPI19_2[0], r0, r3\n\tsub.s!\t@CPI19_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI19_2[0], r9, r4\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI19_7[0], r1, r1\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI19_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB19_25\n\tadd\tr0, r0, r6\n.BB19_9:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB19_9\n.BB19_25:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB19_11\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB19_11:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_12\n.BB19_17:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI19_8[0], r1, r3\n\tjump.gt\t@.BB19_19\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB19_19\n\tst.1\t64, r1\n\tadd\t@CPI19_9[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI19_9[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI19_9[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB19_3\n\tld.1\tr9, r2\n\tsub.s!\t0, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB19_3\n\tadd\tstack-[3], r0, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI19_2[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI19_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI19_2[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI19_11[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[4], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB19_3\n\tadd\tstack-[3], r0, r1\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsstore\tr1, r0\n\tret\n.BB19_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_1:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_19:\n\tadd\t@CPI19_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_12:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB19_24\n\tadd\tr0, r0, r5\n.BB19_14:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB19_14\n.BB19_24:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB19_16\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB19_16:\n\tadd\t@CPI19_2[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI19_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI19_2[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\n__farcall:\n.func_begin20:\n.tmp0:\n\tfar_call\tr1, r2, @.BB20_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB20_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end20:\n\n__staticcall:\n.func_begin21:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB21_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB21_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end21:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI8_0:\nCPI10_3:\nCPI11_3:\nCPI12_3:\nCPI13_3:\nCPI14_2:\nCPI15_4:\nCPI16_4:\nCPI17_0:\nCPI18_0:\nCPI19_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551616\nCPI0_2:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI9_0:\nCPI12_12:\nCPI13_12:\nCPI14_9:\nCPI15_10:\nCPI16_10:\nCPI17_11:\nCPI18_11:\nCPI19_9:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI2_4:\nCPI3_0:\nCPI4_1:\nCPI5_1:\nCPI8_2:\nCPI9_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_5:\nCPI15_8:\nCPI16_8:\nCPI17_3:\nCPI18_3:\nCPI19_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI12_19:\nCPI13_19:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI17_4:\nCPI18_4:\nCPI19_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI12_10:\nCPI13_10:\nCPI14_1:\nCPI15_1:\nCPI16_1:\nCPI17_5:\nCPI18_5:\nCPI19_1:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 1431075209\nCPI0_8:\n\t.cell 2377850425\nCPI0_9:\n\t.cell 3803951447\nCPI0_10:\n\t.cell 3803951448\nCPI0_11:\n\t.cell 4076725131\nCPI0_12:\n\t.cell 4156954817\nCPI0_13:\n\t.cell 2377850426\nCPI0_14:\n\t.cell 2482086923\nCPI0_15:\n\t.cell 1682452344\nCPI0_16:\n\t.cell 1682452345\nCPI0_17:\n\t.cell 1901074598\nCPI0_18:\n\t.cell 2376452955\nCPI0_19:\n\t.cell 1431075210\nCPI0_20:\n\t.cell 1661688737\nCPI0_21:\n\t.cell 514498628\nCPI0_22:\n\t.cell 1221414064\nCPI0_23:\n\t.cell 1221414065\nCPI0_24:\n\t.cell 1374356902\nCPI0_25:\n\t.cell 1393748622\nCPI0_26:\n\t.cell 514498629\nCPI0_27:\n\t.cell 1142570608\nCPI0_28:\n\t.cell 374603058\nCPI0_29:\n\t.cell 374603059\nCPI0_30:\n\t.cell 399177457\nCPI0_31:\n\t.cell 136199898\nCPI0_32:\n\t.cell 354876967\nCPI0_33:\n\t.cell 2535301200456458802993406410752\nCPI0_34:\n\t.cell 5070602400912917605986812821504\nCPI0_35:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\nCPI10_5:\nCPI11_5:\nCPI12_21:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI1_3:\nCPI10_6:\nCPI11_6:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI1_4:\nCPI10_7:\nCPI11_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI2_0:\nCPI12_13:\nCPI13_13:\nCPI14_13:\nCPI15_11:\nCPI16_11:\nCPI17_12:\nCPI18_12:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602852\nCPI2_1:\nCPI12_5:\nCPI13_5:\nCPI14_10:\nCPI15_2:\nCPI16_2:\nCPI17_6:\nCPI18_6:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602851\nCPI2_2:\nCPI12_16:\nCPI13_16:\nCPI14_6:\nCPI15_14:\nCPI16_14:\nCPI17_15:\nCPI18_15:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602850\nCPI2_3:\nCPI12_8:\nCPI13_8:\nCPI14_4:\nCPI15_6:\nCPI16_6:\nCPI17_2:\nCPI18_2:\nCPI19_4:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI8_1:\nCPI14_3:\nCPI17_1:\nCPI18_1:\nCPI19_3:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI18_22:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI10_4:\nCPI11_4:\nCPI12_4:\nCPI13_4:\nCPI17_20:\nCPI18_23:\n\t.cell 7922816251426433759354395033600\nCPI11_8:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI11_9:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI11_10:\n\t.cell 10458117451882892562347801444352\nCPI12_6:\nCPI13_6:\nCPI14_11:\nCPI15_3:\nCPI16_3:\nCPI17_7:\nCPI18_7:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI12_7:\nCPI13_7:\nCPI14_12:\nCPI15_5:\nCPI16_5:\nCPI17_8:\nCPI18_8:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI12_9:\nCPI13_9:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_9:\nCPI18_9:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI12_11:\nCPI13_11:\nCPI14_8:\nCPI15_9:\nCPI16_9:\nCPI17_10:\nCPI18_10:\nCPI19_8:\n\t.cell 18446744073709551615\nCPI12_14:\nCPI13_14:\nCPI15_12:\nCPI16_12:\nCPI17_13:\nCPI18_13:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI12_15:\nCPI13_15:\nCPI15_13:\nCPI16_13:\nCPI17_14:\nCPI18_14:\nCPI19_7:\n\t.cell 5387515050969974956360988622848\nCPI12_17:\nCPI13_17:\nCPI14_14:\nCPI15_15:\nCPI16_15:\nCPI17_16:\nCPI18_16:\n\t.cell 115792089237316195423570985008687907853269984665640564039457584007\nCPI12_18:\nCPI13_18:\nCPI14_15:\nCPI15_16:\nCPI16_16:\nCPI17_17:\nCPI18_17:\n\t.cell 1000000000000\nCPI12_20:\n\t.cell 18446744073709551487\nCPI17_18:\nCPI18_18:\nCPI19_6:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI17_19:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI17_21:\nCPI18_19:\nCPI19_10:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI17_22:\n\t.cell -50416925515954125712902479513714981708697134119002059318863190090123713045995\nCPI18_20:\n\t.cell -6116999617221423143306666619552877372318735432152700305865106915521926679192\nCPI18_21:\n\t.cell 54011551340199394328227737224105858336152694679383673608938852215025154654208\nCPI19_11:\n\t.cell -31002090515413820819693746282746859664763185746936276214475542018239598033515\n","bytecode":{"object":""},"methodIdentifiers":{"add(uint256,address,bool)":"1eaaa045","deposit(uint256,uint256)":"e2bbb158","emergencyWithdraw(uint256)":"5312ea8e","getMultiplier(uint256,uint256)":"8dbb1e3a","massUpdatePools()":"630b5ba1","owner()":"8da5cb5b","pendingRewardToken(uint256,address)":"1653fd33","poolInfo(uint256)":"1526fe27","poolLength()":"081e3eda","renounceOwnership()":"715018a6","rewardToken()":"f7c618c1","rewardTokenPerBlock()":"554c798a","set(uint256,uint256,bool)":"64482f79","startBlock()":"48cd4cb1","totalAllocPoint()":"17caf6f1","transferOwnership(address)":"f2fde38b","updatePool(uint256)":"51eb05a6","userInfo(uint256,address)":"93f1a40b","withdraw(uint256,uint256)":"441a3e70"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/yieldFarming/MasterChef.sol\"\nobject \"MasterChef_1539\" {\n    code {\n        {\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MasterChef_1539\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            let value1 := mload(add(_1, 32))\n            constructor_MasterChef(value, value1, mload(add(_1, 64)))\n            let _2 := mload(64)\n            let _3 := datasize(\"MasterChef_1539_deployed\")\n            codecopy(_2, dataoffset(\"MasterChef_1539_deployed\"), _3)\n            return(_2, _3)\n        }\n        /// @ast-id 914 @src 5:2352:2608  \"constructor(...\"\n        function constructor_MasterChef(var_rewardToken_address, var_rewardTokenPerBlock, var_startBlock)\n        {\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            let _1 := sload(/** @src 0:2525:2531  \"_owner\" */ 0x00)\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := not(sub(shl(160, 1), 1))\n            sstore(/** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ or(and(_1, _3), /** @src 4:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64), /** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ and(_1, _2), /** @src 4:719:729  \"msg.sender\" */ caller())\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            sstore(/** @src 5:1970:1971  \"0\" */ 0x05, /** @src 0:2525:2531  \"_owner\" */ 0x00)\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            sstore(/** @src 5:2486:2512  \"rewardToken = _rewardToken\" */ 0x01, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ or(and(sload(/** @src 5:2486:2512  \"rewardToken = _rewardToken\" */ 0x01), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _3), and(var_rewardToken_address, _2)))\n            sstore(/** @src 5:2523:2565  \"rewardTokenPerBlock = _rewardTokenPerBlock\" */ 0x02, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ var_rewardTokenPerBlock)\n            sstore(/** @src 5:2576:2600  \"startBlock = _startBlock\" */ 0x06, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ var_startBlock)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/yieldFarming/MasterChef.sol\"\n    object \"MasterChef_1539_deployed\" {\n        code {\n            {\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x081e3eda {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        return(_1, sub(abi_encode_uint256(_1, sload(/** @src 5:2688:2696  \"poolInfo\" */ 0x03)), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _1))\n                    }\n                    case 0x1526fe27 {\n                        if callvalue() { revert(_3, _3) }\n                        let ret, ret_1, ret_2, ret_3 := getter_fun_poolInfo(abi_decode_uint256(calldatasize()))\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_contract_IERC20_uint256_uint256_uint256(memPos, ret, ret_1, ret_2, ret_3), memPos))\n                    }\n                    case 0x1653fd33 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1 := abi_decode_uint256t_address(calldatasize())\n                        let ret_4 := fun_pendingRewardToken(param, param_1)\n                        let memPos_1 := mload(_2)\n                        return(memPos_1, sub(abi_encode_uint256(memPos_1, ret_4), memPos_1))\n                    }\n                    case 0x17caf6f1 {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        let ret_5 := sload(/** @src 5:1937:1971  \"uint256 public totalAllocPoint = 0\" */ 5)\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        let memPos_2 := mload(_2)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, ret_5), memPos_2))\n                    }\n                    case 0x1eaaa045 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_2, param_3, param_4 := abi_decode_uint256t_contract_IERC20t_bool(calldatasize())\n                        /// @src 5:2880:3501  \"function add(...\"\n                        modifier_onlyOwner_933(param_2, param_3, param_4)\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0x441a3e70 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_5, param_6 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_withdraw(param_5, param_6)\n                        return(mload(_2), _3)\n                    }\n                    case 0x48cd4cb1 {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        let ret_6 := sload(/** @src 5:2036:2061  \"uint256 public startBlock\" */ 6)\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        let memPos_3 := mload(_2)\n                        return(memPos_3, sub(abi_encode_uint256(memPos_3, ret_6), memPos_3))\n                    }\n                    case 0x51eb05a6 {\n                        if callvalue() { revert(_3, _3) }\n                        fun_updatePool(abi_decode_uint256(calldatasize()))\n                        return(mload(_2), _3)\n                    }\n                    case 0x5312ea8e {\n                        if callvalue() { revert(_3, _3) }\n                        fun_emergencyWithdraw(abi_decode_uint256(calldatasize()))\n                        return(mload(_2), _3)\n                    }\n                    case 0x554c798a {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        let ret_7 := sload(/** @src 5:1628:1662  \"uint256 public rewardTokenPerBlock\" */ 2)\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        let memPos_4 := mload(_2)\n                        return(memPos_4, sub(abi_encode_uint256(memPos_4, ret_7), memPos_4))\n                    }\n                    case 0x630b5ba1 {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        fun_massUpdatePools()\n                        return(mload(_2), _3)\n                    }\n                    case 0x64482f79 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_7, param_8, param_9 := abi_decode_uint256t_uint256t_bool(calldatasize())\n                        /// @src 5:3604:3975  \"function set(...\"\n                        modifier_onlyOwner_979(param_7, param_8, param_9)\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        /// @src 0:1831:1932  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner()\n                        /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        let ret_8 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_5 := mload(_2)\n                        return(memPos_5, sub(abi_encode_address(memPos_5, ret_8), memPos_5))\n                    }\n                    case 0x8dbb1e3a {\n                        if callvalue() { revert(_3, _3) }\n                        let param_10, param_11 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_9 := /** @src 5:4175:4186  \"_to - _from\" */ checked_sub_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ param_11, param_10)\n                        let memPos_6 := mload(_2)\n                        return(memPos_6, sub(abi_encode_uint256(memPos_6, ret_9), memPos_6))\n                    }\n                    case 0x93f1a40b {\n                        if callvalue() { revert(_3, _3) }\n                        let param_12, param_13 := abi_decode_uint256t_address(calldatasize())\n                        let ret_10, ret_11 := getter_fun_userInfo(param_12, param_13)\n                        let memPos_7 := mload(_2)\n                        return(memPos_7, sub(abi_encode_uint256_uint256(memPos_7, ret_10, ret_11), memPos_7))\n                    }\n                    case 0xe2bbb158 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_14, param_15 := abi_decode_uint256t_uint256(calldatasize())\n                        fun_deposit(param_14, param_15)\n                        return(mload(_2), _3)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        /// @src 0:2081:2279  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner_74(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_2), _3)\n                    }\n                    case 0xf7c618c1 {\n                        if callvalue() { revert(_3, _3) }\n                        abi_decode(calldatasize())\n                        let ret_12 := and(sload(/** @src 5:1551:1581  \"RewardToken public rewardToken\" */ 1), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_8 := mload(_2)\n                        return(memPos_8, sub(abi_encode_address(memPos_8, ret_12), memPos_8))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function storage_array_index_access_struct_PoolInfo__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 5:3256:3264  \"poolInfo\" */ 0x03)))\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:3256:3264  \"poolInfo\" */ 0x03)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                slot := add(87903029871075914254377627908054574944891091886930582284385770809450030037083, shl(2, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function extract_from_storage_value_offsett_contract_IERC20(slot_value) -> value\n            {\n                value := and(slot_value, sub(shl(160, 1), 1))\n            }\n            /// @ast-id 855 @src 5:1696:1722  \"PoolInfo[] public poolInfo\"\n            function getter_fun_poolInfo(key) -> ret_address, ret, ret_1, ret_2\n            {\n                if iszero(lt(key, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ 3))) { revert(0, 0) }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ 3)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := shl(2, key)\n                /// @src 5:1696:1722  \"PoolInfo[] public poolInfo\"\n                ret_address := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ and(sload(add(87903029871075914254377627908054574944891091886930582284385770809450030037083, _1)), sub(shl(160, 1), 1))\n                /// @src 5:1696:1722  \"PoolInfo[] public poolInfo\"\n                ret := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ add(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _1, /** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c))\n                ret_1 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ add(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _1, /** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d))\n                ret_2 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ add(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _1, /** @src 5:1696:1722  \"PoolInfo[] public poolInfo\" */ 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e))\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function abi_encode_contract_IERC20_uint256_uint256_uint256(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_address(value)\n                value1 := value\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_contract_IERC20t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                validator_revert_address(value)\n                value1 := value\n                let value_1 := calldataload(68)\n                validator_revert_bool(value_1)\n                value2 := value_1\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_decode_uint256t_uint256t_bool(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                let value := calldataload(68)\n                validator_revert_bool(value)\n                value2 := value\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 5:4463:4471  \"userInfo\" */ 0x04)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 862 @src 5:1778:1842  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\"\n            function getter_fun_userInfo(key, key_1) -> ret, ret_1\n            {\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ key)\n                mstore(0x20, /** @src 5:1778:1842  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ 4)\n                let slot := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x40), /** @src 5:1778:1842  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ key_1)\n                ret := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1778:1842  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ slot)\n                ret_1 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:1778:1842  \"mapping(uint256 => mapping(address => UserInfo)) public userInfo\" */ add(slot, 1))\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_address(value)\n                value0 := value\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner()\n            {\n                fun_checkOwner()\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := sload(0)\n                sstore(0, and(_1, shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64), 0, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ and(_1, sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ value, /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_74(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:2169:2191  \"newOwner != address(0)\" */ var_newOwner, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _1)\n                if /** @src 0:2169:2191  \"newOwner != address(0)\" */ iszero(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 0:2525:2531  \"_owner\" */ 0x00)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(/** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64), /** @src 0:2525:2531  \"_owner\" */ 0x00, /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ and(_3, _1), /** @src 0:2573:2613  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_933(var_allocPoint, var_lpToken_address, var_withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 5:3011:3072  \"if (_withUpdate) {...\"\n                if var_withUpdate { fun_massUpdatePools() }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := sload(/** @src 5:3123:3133  \"startBlock\" */ 0x06)\n                /// @src 5:3108:3187  \"block.number > startBlock...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 5:3108:3187  \"block.number > startBlock...\"\n                switch /** @src 5:3108:3133  \"block.number > startBlock\" */ gt(/** @src 5:3108:3120  \"block.number\" */ number(), /** @src 5:3108:3133  \"block.number > startBlock\" */ _1)\n                case /** @src 5:3108:3187  \"block.number > startBlock...\" */ 0 { expr := _1 }\n                default {\n                    expr := /** @src 5:3108:3120  \"block.number\" */ number()\n                }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(/** @src 5:3216:3231  \"totalAllocPoint\" */ 0x05, /** @src 5:3216:3245  \"totalAllocPoint + _allocPoint\" */ checked_add_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:3216:3231  \"totalAllocPoint\" */ 0x05), /** @src 5:3216:3245  \"totalAllocPoint + _allocPoint\" */ var_allocPoint))\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_4122(memPtr)\n                let _2 := sub(shl(160, 1), 1)\n                mstore(memPtr, and(var_lpToken_address, _2))\n                /// @src 5:3284:3482  \"PoolInfo({...\"\n                let _3 := add(memPtr, 32)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                mstore(_3, var_allocPoint)\n                /// @src 5:3284:3482  \"PoolInfo({...\"\n                let _4 := add(memPtr, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 64)\n                mstore(_4, expr)\n                /// @src 5:3284:3482  \"PoolInfo({...\"\n                let _5 := add(memPtr, 96)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                mstore(_5, /** @src -1:-1:-1 */ 0)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let oldLen := sload(/** @src 5:3256:3264  \"poolInfo\" */ 0x03)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                sstore(/** @src 5:3256:3264  \"poolInfo\" */ 0x03, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_PoolInfo__dyn(oldLen)\n                if offset\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, /** @src -1:-1:-1 */ 0)\n                    /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x24)\n                }\n                update_storage_value_offsett_address_to_address(slot, and(mload(memPtr), _2))\n                sstore(add(slot, 1), mload(_3))\n                sstore(add(slot, 2), mload(_4))\n                sstore(add(slot, /** @src 5:3256:3264  \"poolInfo\" */ 0x03), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(_5))\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_4122(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_979(var_pid, var_allocPoint, var__withUpdate)\n            {\n                fun_checkOwner()\n                /// @src 5:3732:3793  \"if (_withUpdate) {...\"\n                if var__withUpdate { fun_massUpdatePools() }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _1 := sload(/** @src 5:3834:3849  \"totalAllocPoint\" */ 0x05)\n                /// @src 5:3865:3879  \"poolInfo[_pid]\"\n                let _2, _3 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _4 := sload(/** @src 5:3865:3890  \"poolInfo[_pid].allocPoint\" */ add(_2, 1))\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                if lt(_1, _4) { panic_error_0x11() }\n                sstore(/** @src 5:3834:3849  \"totalAllocPoint\" */ 0x05, /** @src 5:3834:3917  \"totalAllocPoint -...\" */ checked_add_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sub(_1, _4), /** @src 5:3834:3917  \"totalAllocPoint -...\" */ var_allocPoint))\n                /// @src 5:3928:3942  \"poolInfo[_pid]\"\n                let _5, _6 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(/** @src 5:3928:3953  \"poolInfo[_pid].allocPoint\" */ add(_5, /** @src 5:3865:3890  \"poolInfo[_pid].allocPoint\" */ 1), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ var_allocPoint)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                if lt(x, y) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function checked_mul_uint256_4136(x) -> product\n            {\n                /// @src 5:5093:5097  \"1e12\"\n                let _1 := 0xe8d4a51000\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                if and(iszero(iszero(x)), gt(/** @src 5:5093:5097  \"1e12\" */ _1, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, /** @src 5:5093:5097  \"1e12\" */ _1)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, y)\n            }\n            function checked_div_uint256_4137(x) -> r\n            {\n                r := div(x, /** @src 5:5194:5198  \"1e12\" */ 0xe8d4a51000)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 1118 @src 5:4265:5225  \"function pendingRewardToken(...\"\n            function fun_pendingRewardToken(var_pid, var_user) -> var\n            {\n                /// @src 5:4414:4428  \"poolInfo[_pid]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:4463:4484  \"userInfo[_pid][_user]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(/** @src 5:4463:4477  \"userInfo[_pid]\" */ mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256(var_pid), /** @src 5:4463:4484  \"userInfo[_pid][_user]\" */ var_user)\n                /// @src 5:4495:4555  \"uint256 accRewardTokenPerShare = pool.accRewardTokenPerShare\"\n                let var_accRewardTokenPerShare := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:4528:4555  \"pool.accRewardTokenPerShare\" */ add(_1, /** @src 5:4414:4422  \"poolInfo\" */ 0x03))\n                /// @src 5:4585:4607  \"pool.lpToken.balanceOf\"\n                let expr_1054_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:4585:4597  \"pool.lpToken\" */ _1)))\n                /// @src 5:4585:4622  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:4585:4622  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 5:4585:4622  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_1054_address, _4, sub(abi_encode_address(add(_4, /** @src 5:4463:4471  \"userInfo\" */ 0x04), /** @src 5:4616:4620  \"this\" */ address()), /** @src 5:4585:4622  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 5:4585:4622  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _6 := sload(/** @src 5:4652:4672  \"pool.lastRewardBlock\" */ add(_1, 2))\n                /// @src 5:4637:4689  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                let expr_1 := /** @src 5:4637:4672  \"block.number > pool.lastRewardBlock\" */ gt(/** @src 5:4637:4649  \"block.number\" */ number(), /** @src 5:4637:4672  \"block.number > pool.lastRewardBlock\" */ _6)\n                /// @src 5:4637:4689  \"block.number > pool.lastRewardBlock && lpSupply != 0\"\n                if expr_1\n                {\n                    expr_1 := /** @src 5:4676:4689  \"lpSupply != 0\" */ iszero(iszero(expr))\n                }\n                /// @src 5:4633:5122  \"if (block.number > pool.lastRewardBlock && lpSupply != 0) {...\"\n                if expr_1\n                {\n                    /// @src 5:4168:4186  \"return _to - _from\"\n                    let var_1 := /** @src 5:4175:4186  \"_to - _from\" */ checked_sub_uint256(/** @src 5:4637:4649  \"block.number\" */ number(), /** @src 5:4175:4186  \"_to - _from\" */ _6)\n                    /// @src 5:4869:4918  \"multiplier *...\"\n                    let expr_2 := checked_mul_uint256(var_1, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:4652:4672  \"pool.lastRewardBlock\" */ 2))\n                    /// @src 5:4869:4953  \"multiplier *...\"\n                    let expr_3 := checked_mul_uint256(expr_2, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:4938:4953  \"pool.allocPoint\" */ add(_1, 1)))\n                    /// @src 5:4987:5110  \"accRewardTokenPerShare =...\"\n                    var_accRewardTokenPerShare := /** @src 5:5029:5110  \"accRewardTokenPerShare +...\" */ checked_add_uint256(var_accRewardTokenPerShare, /** @src 5:5072:5109  \"(rewardTokenAmount * 1e12) / lpSupply\" */ checked_div_uint256(/** @src 5:5073:5097  \"rewardTokenAmount * 1e12\" */ checked_mul_uint256_4136(/** @src 5:4868:4972  \"(multiplier *...\" */ checked_div_uint256(expr_3, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:4957:4972  \"totalAllocPoint\" */ 0x05))), /** @src 5:5072:5109  \"(rewardTokenAmount * 1e12) / lpSupply\" */ expr))\n                }\n                /// @src 5:5153:5198  \"(user.amount * accRewardTokenPerShare) / 1e12\"\n                let expr_4 := checked_div_uint256_4137(/** @src 5:5154:5190  \"user.amount * accRewardTokenPerShare\" */ checked_mul_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5154:5165  \"user.amount\" */ _3), /** @src 5:5154:5190  \"user.amount * accRewardTokenPerShare\" */ var_accRewardTokenPerShare))\n                /// @src 5:5132:5217  \"return...\"\n                var := /** @src 5:5152:5217  \"((user.amount * accRewardTokenPerShare) / 1e12) - user.rewardDebt\" */ checked_sub_uint256(expr_4, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5202:5217  \"user.rewardDebt\" */ add(_3, 1)))\n            }\n            /// @ast-id 1143 @src 5:5308:5488  \"function massUpdatePools() public {...\"\n            function fun_massUpdatePools()\n            {\n                /// @src 5:5370:5385  \"poolInfo.length\"\n                let expr := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5370:5378  \"poolInfo\" */ 0x03)\n                /// @src 5:5401:5416  \"uint256 pid = 0\"\n                let var_pid := /** @src 5:5415:5416  \"0\" */ 0x00\n                /// @src 5:5396:5481  \"for (uint256 pid = 0; pid < length; ++pid) {...\"\n                for { }\n                /** @src 5:5418:5430  \"pid < length\" */ lt(var_pid, expr)\n                /// @src 5:5401:5416  \"uint256 pid = 0\"\n                {\n                    /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                    if eq(var_pid, not(0)) { panic_error_0x11() }\n                    /// @src 5:5432:5437  \"++pid\"\n                    var_pid := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ add(var_pid, 1)\n                }\n                /// @src 5:5432:5437  \"++pid\"\n                {\n                    /// @src 5:5465:5468  \"pid\"\n                    fun_updatePool(var_pid)\n                }\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bool(value)\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 1241 @src 5:5564:6389  \"function updatePool(uint256 _pid) public {...\"\n            function fun_updatePool(var_pid)\n            {\n                /// @src 5:5640:5654  \"poolInfo[_pid]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:5685:5705  \"pool.lastRewardBlock\"\n                let _3 := add(_1, 2)\n                /// @src 5:5665:5740  \"if (block.number <= pool.lastRewardBlock) {...\"\n                if /** @src 5:5669:5705  \"block.number <= pool.lastRewardBlock\" */ iszero(gt(/** @src 5:5669:5681  \"block.number\" */ number(), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5685:5705  \"pool.lastRewardBlock\" */ _3)))\n                /// @src 5:5665:5740  \"if (block.number <= pool.lastRewardBlock) {...\"\n                {\n                    /// @src 5:5722:5729  \"return;\"\n                    leave\n                }\n                /// @src 5:5769:5791  \"pool.lpToken.balanceOf\"\n                let expr_1167_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:5769:5781  \"pool.lpToken\" */ _1)))\n                /// @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\"\n                let _4 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\"\n                mstore(_4, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\"\n                let _5 := staticcall(gas(), expr_1167_address, _4, sub(abi_encode_address(add(_4, 4), /** @src 5:5800:5804  \"this\" */ address()), /** @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\" */ _4), _4, 32)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\"\n                if _5\n                {\n                    finalize_allocation(_4, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_4, add(_4, returndatasize()))\n                }\n                /// @src 5:5817:5919  \"if (lpSupply == 0) {...\"\n                if /** @src 5:5821:5834  \"lpSupply == 0\" */ iszero(expr)\n                /// @src 5:5817:5919  \"if (lpSupply == 0) {...\"\n                {\n                    /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                    sstore(_3, /** @src 5:5669:5681  \"block.number\" */ number())\n                    /// @src 5:5901:5908  \"return;\"\n                    leave\n                }\n                /// @src 5:4168:4186  \"return _to - _from\"\n                let var_ := /** @src 5:4175:4186  \"_to - _from\" */ checked_sub_uint256(/** @src 5:5669:5681  \"block.number\" */ number(), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5964:5984  \"pool.lastRewardBlock\" */ _3))\n                /// @src 5:6039:6084  \"multiplier *...\"\n                let expr_1 := checked_mul_uint256(var_, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:5685:5705  \"pool.lastRewardBlock\" */ 2))\n                /// @src 5:6039:6115  \"multiplier *...\"\n                let expr_2 := checked_mul_uint256(expr_1, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:6100:6115  \"pool.allocPoint\" */ add(_1, 1)))\n                /// @src 5:6038:6134  \"(multiplier *...\"\n                let expr_3 := checked_div_uint256(expr_2, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:6119:6134  \"totalAllocPoint\" */ 0x05))\n                /// @src 5:6147:6163  \"rewardToken.mint\"\n                let expr_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:6100:6115  \"pool.allocPoint\" */ 1)))\n                /// @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\"\n                let _6 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\"\n                mstore(_6, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x40c10f19))\n                /// @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\"\n                let _7 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\" */ _6, sub(abi_encode_address_uint256(add(_6, /** @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\" */ 4), /** @src 5:5800:5804  \"this\" */ address(), /** @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\" */ expr_3), _6), _6, /** @src 5:5769:5806  \"pool.lpToken.balanceOf(address(this))\" */ 32)\n                /// @src 5:6147:6197  \"rewardToken.mint(address(this), rewardTokenAmount)\"\n                if iszero(_7) { revert_forward() }\n                if _7\n                {\n                    finalize_allocation(_6, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_6, add(_6, returndatasize())))\n                }\n                /// @src 5:6253:6280  \"pool.accRewardTokenPerShare\"\n                let _8 := add(_1, /** @src 5:5640:5648  \"poolInfo\" */ 0x03)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _9 := sload(/** @src 5:6253:6280  \"pool.accRewardTokenPerShare\" */ _8)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(_8, /** @src 5:6253:6335  \"pool.accRewardTokenPerShare +...\" */ checked_add_uint256(_9, /** @src 5:6297:6334  \"(rewardTokenAmount * 1e12) / lpSupply\" */ checked_div_uint256(/** @src 5:6298:6322  \"rewardTokenAmount * 1e12\" */ checked_mul_uint256_4136(expr_3), /** @src 5:6297:6334  \"(rewardTokenAmount * 1e12) / lpSupply\" */ expr)))\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(_3, /** @src 5:5669:5681  \"block.number\" */ number())\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1343 @src 5:6465:7139  \"function deposit(uint256 _pid, uint256 _amount) public {...\"\n            function fun_deposit(var_pid, var__amount)\n            {\n                /// @src 5:6555:6569  \"poolInfo[_pid]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:6604:6618  \"userInfo[_pid]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256(var_pid)\n                /// @src 5:6604:6630  \"userInfo[_pid][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 5:6619:6629  \"msg.sender\" */ caller())\n                /// @src 5:6652:6656  \"_pid\"\n                fun_updatePool(var_pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _5 := sload(/** @src 5:6672:6683  \"user.amount\" */ _4)\n                /// @src 5:6668:6876  \"if (user.amount > 0) {...\"\n                if /** @src 5:6672:6687  \"user.amount > 0\" */ iszero(iszero(_5))\n                /// @src 5:6668:6876  \"if (user.amount > 0) {...\"\n                {\n                    /// @src 5:6723:6790  \"(user.amount * pool.accRewardTokenPerShare) /...\"\n                    let expr := checked_div_uint256_4137(/** @src 5:6724:6765  \"user.amount * pool.accRewardTokenPerShare\" */ checked_mul_uint256(_5, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:6738:6765  \"pool.accRewardTokenPerShare\" */ add(_1, /** @src 5:6555:6563  \"poolInfo\" */ 0x03))))\n                    /// @src 5:6856:6863  \"pending\"\n                    fun_rewardTokenTransfer(/** @src 5:6619:6629  \"msg.sender\" */ caller(), /** @src 5:6722:6809  \"((user.amount * pool.accRewardTokenPerShare) /...\" */ checked_sub_uint256(expr, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:6794:6809  \"user.rewardDebt\" */ add(_4, 1))))\n                }\n                /// @src 5:6886:6911  \"pool.lpToken.transferFrom\"\n                let expr_1300_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:6886:6898  \"pool.lpToken\" */ _1)))\n                /// @src 5:6886:6956  \"pool.lpToken.transferFrom(address(msg.sender), address(this), _amount)\"\n                let _6 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:6886:6956  \"pool.lpToken.transferFrom(address(msg.sender), address(this), _amount)\"\n                mstore(_6, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x23b872dd))\n                /// @src 5:6886:6956  \"pool.lpToken.transferFrom(address(msg.sender), address(this), _amount)\"\n                let _7 := call(gas(), expr_1300_address, /** @src -1:-1:-1 */ 0, /** @src 5:6886:6956  \"pool.lpToken.transferFrom(address(msg.sender), address(this), _amount)\" */ _6, sub(abi_encode_address_address_uint256(add(_6, /** @src 5:6604:6612  \"userInfo\" */ 0x04), /** @src 5:6619:6629  \"msg.sender\" */ caller(), /** @src 5:6941:6945  \"this\" */ address(), /** @src 5:6886:6956  \"pool.lpToken.transferFrom(address(msg.sender), address(this), _amount)\" */ var__amount), _6), _6, 32)\n                if iszero(_7) { revert_forward() }\n                if _7\n                {\n                    finalize_allocation(_6, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_6, add(_6, returndatasize())))\n                }\n                /// @src 5:6981:7002  \"user.amount + _amount\"\n                let _8 := checked_add_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:6981:6992  \"user.amount\" */ _4), /** @src 5:6981:7002  \"user.amount + _amount\" */ var__amount)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(_4, _8)\n                sstore(/** @src 5:7013:7028  \"user.rewardDebt\" */ add(_4, 1), /** @src 5:7031:7081  \"(user.amount * pool.accRewardTokenPerShare) / 1e12\" */ checked_div_uint256_4137(/** @src 5:7032:7073  \"user.amount * pool.accRewardTokenPerShare\" */ checked_mul_uint256(_8, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7046:7073  \"pool.accRewardTokenPerShare\" */ add(_1, /** @src 5:6555:6563  \"poolInfo\" */ 0x03)))))\n                /// @src 5:7097:7131  \"Deposit(msg.sender, _pid, _amount)\"\n                let _9 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:7097:7131  \"Deposit(msg.sender, _pid, _amount)\"\n                log3(_9, sub(abi_encode_uint256(_9, var__amount), _9), 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15, /** @src 5:6619:6629  \"msg.sender\" */ caller(), /** @src 5:7097:7131  \"Deposit(msg.sender, _pid, _amount)\" */ var_pid)\n            }\n            /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n            function require_helper_stringliteral_d090(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"withdraw: not good\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1443 @src 5:7191:7859  \"function withdraw(uint256 _pid, uint256 _amount) public {...\"\n            function fun_withdraw(var_pid, var_amount)\n            {\n                /// @src 5:7282:7296  \"poolInfo[_pid]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var_pid)\n                /// @src 5:7331:7345  \"userInfo[_pid]\"\n                let _3 := mapping_index_access_mapping_uint256_mapping_address_struct_UserInfo_storage_of_uint256(var_pid)\n                /// @src 5:7331:7357  \"userInfo[_pid][msg.sender]\"\n                let _4 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(_3, /** @src 5:7346:7356  \"msg.sender\" */ caller())\n                /// @src 5:7368:7421  \"require(user.amount >= _amount, \\\"withdraw: not good\\\")\"\n                require_helper_stringliteral_d090(/** @src 5:7376:7398  \"user.amount >= _amount\" */ iszero(lt(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7376:7387  \"user.amount\" */ _4), /** @src 5:7376:7398  \"user.amount >= _amount\" */ var_amount)))\n                /// @src 5:7443:7447  \"_pid\"\n                fun_updatePool(var_pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _5 := sload(/** @src 5:7479:7490  \"user.amount\" */ _4)\n                /// @src 5:7493:7520  \"pool.accRewardTokenPerShare\"\n                let _6 := add(_1, /** @src 5:7282:7290  \"poolInfo\" */ 0x03)\n                /// @src 5:7478:7528  \"(user.amount * pool.accRewardTokenPerShare) / 1e12\"\n                let expr := checked_div_uint256_4137(/** @src 5:7479:7520  \"user.amount * pool.accRewardTokenPerShare\" */ checked_mul_uint256(_5, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7493:7520  \"pool.accRewardTokenPerShare\" */ _6)))\n                /// @src 5:7545:7560  \"user.rewardDebt\"\n                let _7 := add(_4, 1)\n                /// @src 5:7605:7612  \"pending\"\n                fun_rewardTokenTransfer(/** @src 5:7346:7356  \"msg.sender\" */ caller(), /** @src 5:7477:7560  \"((user.amount * pool.accRewardTokenPerShare) / 1e12) -...\" */ checked_sub_uint256(expr, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7545:7560  \"user.rewardDebt\" */ _7)))\n                /// @src 5:7638:7659  \"user.amount - _amount\"\n                let _8 := checked_sub_uint256(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7638:7649  \"user.amount\" */ _4), /** @src 5:7638:7659  \"user.amount - _amount\" */ var_amount)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(_4, _8)\n                sstore(_7, /** @src 5:7688:7738  \"(user.amount * pool.accRewardTokenPerShare) / 1e12\" */ checked_div_uint256_4137(/** @src 5:7689:7730  \"user.amount * pool.accRewardTokenPerShare\" */ checked_mul_uint256(_8, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sload(/** @src 5:7703:7730  \"pool.accRewardTokenPerShare\" */ _6))))\n                /// @src 5:7749:7770  \"pool.lpToken.transfer\"\n                let expr_1426_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:7749:7761  \"pool.lpToken\" */ _1)))\n                /// @src 5:7749:7800  \"pool.lpToken.transfer(address(msg.sender), _amount)\"\n                let _9 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:7749:7800  \"pool.lpToken.transfer(address(msg.sender), _amount)\"\n                mstore(_9, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0xa9059cbb))\n                /// @src 5:7749:7800  \"pool.lpToken.transfer(address(msg.sender), _amount)\"\n                let _10 := call(gas(), expr_1426_address, /** @src -1:-1:-1 */ 0, /** @src 5:7749:7800  \"pool.lpToken.transfer(address(msg.sender), _amount)\" */ _9, sub(abi_encode_address_uint256(add(_9, /** @src 5:7331:7339  \"userInfo\" */ 0x04), /** @src 5:7346:7356  \"msg.sender\" */ caller(), /** @src 5:7749:7800  \"pool.lpToken.transfer(address(msg.sender), _amount)\" */ var_amount), _9), _9, 32)\n                if iszero(_10) { revert_forward() }\n                if _10\n                {\n                    finalize_allocation(_9, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_9, add(_9, returndatasize())))\n                }\n                /// @src 5:7816:7851  \"Withdraw(msg.sender, _pid, _amount)\"\n                let _11 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:7816:7851  \"Withdraw(msg.sender, _pid, _amount)\"\n                log3(_11, sub(abi_encode_uint256(_11, var_amount), _11), 0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568, /** @src 5:7346:7356  \"msg.sender\" */ caller(), /** @src 5:7816:7851  \"Withdraw(msg.sender, _pid, _amount)\" */ var_pid)\n            }\n            /// @ast-id 1500 @src 5:7930:8282  \"function emergencyWithdraw(uint256 _pid) public {...\"\n            function fun_emergencyWithdraw(var__pid)\n            {\n                /// @src 5:8013:8027  \"poolInfo[_pid]\"\n                let _1, _2 := storage_array_index_access_struct_PoolInfo__dyn(var__pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ var__pid)\n                mstore(0x20, /** @src 5:8062:8070  \"userInfo\" */ 0x04)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x40)\n                /// @src 5:8062:8088  \"userInfo[_pid][msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_struct_UserInfo_storage_of_address(dataSlot, /** @src 5:8077:8087  \"msg.sender\" */ caller())\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let value := and(sload(/** @src 5:8099:8111  \"pool.lpToken\" */ _1), /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ sub(shl(160, 1), 1))\n                let _4 := sload(/** @src 5:8142:8153  \"user.amount\" */ _3)\n                /// @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\"\n                let _5 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(0x40)\n                /// @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\"\n                mstore(_5, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0xa9059cbb))\n                /// @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\"\n                let _6 := call(gas(), value, /** @src -1:-1:-1 */ 0, /** @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\" */ _5, sub(abi_encode_address_uint256(add(_5, /** @src 5:8062:8070  \"userInfo\" */ 0x04), /** @src 5:8077:8087  \"msg.sender\" */ caller(), /** @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\" */ _4), _5), _5, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x20)\n                /// @src 5:8099:8154  \"pool.lpToken.transfer(address(msg.sender), user.amount)\"\n                if iszero(_6) { revert_forward() }\n                if _6\n                {\n                    finalize_allocation(_5, returndatasize())\n                    pop(abi_decode_bool_fromMemory(_5, add(_5, returndatasize())))\n                }\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                let _7 := sload(/** @src 5:8206:8217  \"user.amount\" */ _3)\n                /// @src 5:8170:8218  \"EmergencyWithdraw(msg.sender, _pid, user.amount)\"\n                let _8 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(0x40)\n                mstore(_8, _7)\n                /// @src 5:8170:8218  \"EmergencyWithdraw(msg.sender, _pid, user.amount)\"\n                log3(_8, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ 0x20, /** @src 5:8170:8218  \"EmergencyWithdraw(msg.sender, _pid, user.amount)\" */ 0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595, /** @src 5:8077:8087  \"msg.sender\" */ caller(), /** @src 5:8170:8218  \"EmergencyWithdraw(msg.sender, _pid, user.amount)\" */ var__pid)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(_3, /** @src -1:-1:-1 */ 0)\n                /// @src 5:212:8743  \"contract MasterChef is Ownable {...\"\n                sstore(/** @src 5:8255:8270  \"user.rewardDebt\" */ add(_3, 1), /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 1538 @src 5:8405:8740  \"function rewardTokenTransfer(address _to, uint256 _amount) internal {...\"\n            function fun_rewardTokenTransfer(var_to, var_amount)\n            {\n                /// @src 5:8513:8534  \"rewardToken.balanceOf\"\n                let expr_1510_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:8513:8524  \"rewardToken\" */ 0x01)))\n                /// @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\"\n                let _1 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                /// @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\"\n                mstore(_1, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0x70a08231))\n                /// @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\"\n                let _2 := staticcall(gas(), expr_1510_address, _1, sub(abi_encode_address(add(_1, 4), /** @src 5:8543:8547  \"this\" */ address()), /** @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\" */ _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\"\n                if _2\n                {\n                    finalize_allocation(_1, returndatasize())\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, returndatasize()))\n                }\n                /// @src 5:8560:8733  \"if (_amount > rewardTokenBalance) {...\"\n                switch /** @src 5:8564:8592  \"_amount > rewardTokenBalance\" */ gt(var_amount, expr)\n                case /** @src 5:8560:8733  \"if (_amount > rewardTokenBalance) {...\" */ 0 {\n                    /// @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\"\n                    let _3 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                    /// @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\"\n                    mstore(_3, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\"\n                    let _4 := call(gas(), expr_1510_address, /** @src -1:-1:-1 */ 0, /** @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\" */ _3, sub(abi_encode_address_uint256(add(_3, /** @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\" */ 4), /** @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\" */ var_to, var_amount), _3), _3, /** @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\" */ 32)\n                    /// @src 5:8687:8721  \"rewardToken.transfer(_to, _amount)\"\n                    if iszero(_4) { revert_forward() }\n                    if _4\n                    {\n                        finalize_allocation(_3, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_3, add(_3, returndatasize())))\n                    }\n                }\n                default /// @src 5:8560:8733  \"if (_amount > rewardTokenBalance) {...\"\n                {\n                    /// @src 5:8609:8629  \"rewardToken.transfer\"\n                    let expr_1522_address := extract_from_storage_value_offsett_contract_IERC20(/** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ extract_from_storage_value_offsett_contract_IERC20(sload(/** @src 5:8513:8524  \"rewardToken\" */ 0x01)))\n                    /// @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\"\n                    let _5 := /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ mload(64)\n                    /// @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\"\n                    mstore(_5, /** @src 5:212:8743  \"contract MasterChef is Ownable {...\" */ shl(224, 0xa9059cbb))\n                    /// @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\"\n                    let _6 := call(gas(), expr_1522_address, /** @src -1:-1:-1 */ 0, /** @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\" */ _5, sub(abi_encode_address_uint256(add(_5, /** @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\" */ 4), /** @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\" */ var_to, expr), _5), _5, /** @src 5:8513:8549  \"rewardToken.balanceOf(address(this))\" */ 32)\n                    /// @src 5:8609:8654  \"rewardToken.transfer(_to, rewardTokenBalance)\"\n                    if iszero(_6) { revert_forward() }\n                    if _6\n                    {\n                        finalize_allocation(_5, returndatasize())\n                        pop(abi_decode_bool_fromMemory(_5, add(_5, returndatasize())))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220b55dd9a29eb9334f978872378397fceacb4475c908c31100257da66651dc8f406c6578706572696d656e74616cf564736f6c634300080b0041\"\n    }\n}\n","hash":"01000589b06ac7589f3b965958b8abc28ccc3dac9eb35e7e21ee68f65e14c4c6","factoryDependencies":{}}},"contracts/yieldFarming/tokens/LPToken.sol":{"LPToken":{"abi":[{"inputs":[{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/yieldFarming/tokens/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/yieldFarming/tokens/LPToken.sol\":{\"keccak256\":\"0xa42ab1eba1ceeea897cbc55a5d16c188ba444f4231fcb0f22c91f08b5dd7d035\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2fc725778b69530740990af311a004fe4534ff59d070bc95ce8e967f3997925b\",\"dweb:/ipfs/QmUAVKMZTym73ZyAs7GfW4fh76ytZvRQqrvHgd1KZhejoe\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"LPToken.sol:LPToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_41\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r5\n\tld.1\t64, r1\n\tadd\tr5, r1, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_69\n\tadd\tr0, r0, r7\n.BB0_8:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_8\n.BB0_69:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr1, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r4\n\tsub.s!\t96, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_2[0], r2, r6\n\tsub.s!\t0, r6, r7\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_2[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r10, r4\n\tsub.s!\t255, r10, r5\n\tjump.gt\t@.BB0_2\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r3, r3\n\tld.1\t64, r9\n\tadd\tr9, r3, r3\n\tsub!\tr3, r9, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_1[0], r3, r7\n\tjump.gt\t@.BB0_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tst.1\tr9, r5\n\tadd\t32, r5, r3\n\tadd\tr3, r4, r6\n\tsub!\tr6, r2, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB0_23\n\tadd\tr0, r0, r6\n.BB0_20:\n\tadd\t32, r6, r6\n\tadd\tr6, r9, r7\n\tadd\tr6, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_20\n\tsub!\tr6, r5, r4\n\tjump.le\t@.BB0_23\n\tadd\tr9, r3, r3\n\tst.1\tr3, r0\n.BB0_23:\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\tr10, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @abi_decode_string_fromMemory, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @constructor_LPToken, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_38\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2811, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_65\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[2]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2815, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_41:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_58:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_string_fromMemory:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_1\n\tld.1\tr1, r4\n\tsub.s!\t@CPI1_1[0], r4, r3\n\tjump.ge\t@.BB1_3\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r5\n\tand\tr3, r5, r5\n\tld.1\t64, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI1_2[0], r5, r7\n\tjump.gt\t@.BB1_3\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB1_3\n\tst.1\t64, r5\n\tst.1\tr3, r4\n\tadd\tr1, r4, r5\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB1_1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB1_12\n\tadd\tr0, r0, r2\n.BB1_9:\n\tadd\t32, r2, r2\n\tadd\tr2, r3, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB1_9\n\tsub!\tr2, r4, r1\n\tjump.le\t@.BB1_12\n\tadd\tr4, r3, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n.BB1_12:\n\tadd\tr3, r0, r1\n\tret\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nconstructor_LPToken:\n.func_begin2:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, stack-[4]\n\tld.1.inc\tr2, r6, r8\n\tsub.s!\t@CPI2_0[0], r6, r1\n\tjump.ge\t@.BB2_1\n\tadd\t3, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r7\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r4\n\tadd.ne\tr1, r0, r4\n\tsub.s!\t31, r4, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr7, r1, r1\n\tjump.ne\t@.BB2_3\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t32, r4, r1\n\tadd\tr3, r0, stack-[7]\n\tadd\tr5, r0, stack-[6]\n\tadd\tr6, r0, stack-[5]\n\tjump.lt\t@.BB2_10\n\tadd\tr4, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r5\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[5], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB2_10\n.BB2_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB2_9\n.BB2_10:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB2_36\n\tst.1\t0, r5\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r6\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB2_33\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB2_32:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB2_32\n.BB2_33:\n\tsub!\tr6, r7, r4\n\tjump.ge\t@.BB2_35\n\tshl.s\t3, r7, r4\n\tand\t248, r4, r5\n\tsub.s\t1, r0, r4\n\tshr\tr4, r5, r5\n\txor\tr5, r4, r4\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r4, r2\n\tsstore\tr1, r2\n.BB2_35:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r5\n\tjump\t@.BB2_11\n.BB2_36:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB2_11\n\tshl.s\t3, r6, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr8, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB2_11:\n\tsstore\tr5, r1\n\tld.1.inc\tr3, r5, r6\n\tsub.s!\t@CPI2_3[0], r5, r1\n\tjump.gt\t@.BB2_1\n\tadd\t4, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_3\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tjump.lt\t@.BB2_18\n\tadd\tr3, r0, stack-[2]\n\tadd\tr6, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[5], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r6\n\tjump.ge\t@.BB2_18\n.BB2_17:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB2_17\n.BB2_18:\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB2_26\n\tst.1\t0, r4\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB2_23\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB2_22:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_22\n.BB2_23:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB2_25\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB2_25:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB2_28\n.BB2_26:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB2_28\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr6, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB2_28:\n\tsstore\tr4, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[4], r0, r3\n\tand\t255, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string_2811:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2815:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_mint:\n.func_begin18:\n\tnop\tstack+=[2]\n\tand!\t@CPI18_0[0], r1, r5\n\tjump.eq\t@.BB18_1\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t1, r0, r1\n\txor\tr2, r1, r4\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB18_3\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r2, r3\n\tsstore\tr1, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_4[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_5\n\tret\n.BB18_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tadd\t@CPI18_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\n__farcall:\n.func_begin19:\n.tmp0:\n\tfar_call\tr1, r2, @.BB19_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n__staticcall:\n.func_begin20:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB20_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB20_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end20:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\nCPI18_1:\n\t.cell 4294967295\nCPI0_1:\nCPI1_2:\nCPI2_3:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI1_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\nCPI1_3:\nCPI2_4:\nCPI8_2:\nCPI9_2:\nCPI16_11:\nCPI18_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_5:\nCPI1_4:\nCPI2_5:\nCPI8_3:\nCPI9_3:\nCPI16_12:\nCPI18_6:\n\t.cell 2852213850513516153367582212096\nCPI0_6:\n\t.cell 1086394136\nCPI0_7:\n\t.cell 2757214934\nCPI0_8:\n\t.cell 2757214935\nCPI0_9:\n\t.cell 2835717307\nCPI0_10:\n\t.cell 3714247998\nCPI0_11:\n\t.cell 1086394137\nCPI0_12:\n\t.cell 1889567281\nCPI0_13:\n\t.cell 2514000705\nCPI0_14:\n\t.cell 599290588\nCPI0_15:\n\t.cell 599290589\nCPI0_16:\n\t.cell 826074471\nCPI0_17:\n\t.cell 961581905\nCPI0_18:\n\t.cell 117300739\nCPI0_19:\n\t.cell 157198259\nCPI0_20:\n\t.cell 404098525\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_1:\nCPI2_0:\n\t.cell 18446744073709551616\nCPI2_2:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\nCPI18_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\nCPI18_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\nCPI18_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI13_4:\nCPI15_13:\nCPI18_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\nCPI18_8:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI15_12:\nCPI18_9:\n\t.cell 7922816251426433759354395033600\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI18_7:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/yieldFarming/tokens/LPToken.sol\"\nobject \"LPToken_1591\" {\n    code {\n        {\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"LPToken_1591\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            let value := mload(memoryDataOffset)\n            if iszero(eq(value, and(value, 0xff)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            let offset := mload(add(memoryDataOffset, 32))\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 64))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            constructor_LPToken(value, value1, abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1))\n            let _3 := mload(64)\n            let _4 := datasize(\"LPToken_1591_deployed\")\n            codecopy(_3, dataoffset(\"LPToken_1591_deployed\"), _4)\n            return(_3, _4)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            array := array_1\n        }\n        function update_storage_value_offsett_uint8_to_uint8(value)\n        {\n            sstore(/** @src 6:331:352  \"_decimals = decimals_\" */ 0x05, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ or(and(sload(/** @src 6:331:352  \"_decimals = decimals_\" */ 0x05), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ not(255)), and(value, 0xff)))\n        }\n        /// @ast-id 1564 @src 6:191:360  \"constructor(...\"\n        function constructor_LPToken(var_decimals, var_name_mpos, var_symbol_mpos)\n        {\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            let newLen := mload(var_name_mpos)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1246(extract_byte_array_length(sload(/** @src 1:2042:2055  \"_name = name_\" */ 0x03)), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1247()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(var_name_mpos, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(var_name_mpos, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(var_name_mpos, srcOffset))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(var_symbol_mpos)\n            /// @src 6:331:352  \"_decimals = decimals_\"\n            update_storage_value_offsett_uint8_to_uint8(var_decimals)\n        }\n        /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1247() -> data\n        {\n            mstore(0, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1246(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/yieldFarming/tokens/LPToken.sol\"\n    object \"LPToken_1591_deployed\" {\n        code {\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_2 := and(sload(/** @src 6:577:586  \"_decimals\" */ 0x05), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0xff)\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4, ret_2), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_3 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_3), memPos_5))\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_mint(param_7, param_8)\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_bool(memPos_6, ret_4), memPos_6))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_5 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256(memPos_7, ret_5), memPos_7))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string_2811()\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_string(memPos_8, converted_1), memPos_8))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_6 := fun_decreaseAllowance(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_6), memPos_9))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_7 := fun_transfer(param_11, param_12)\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_bool(memPos_10, ret_7), memPos_10))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2815(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ param_13), param_14))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_uint256(memPos_11, _4), memPos_11))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, 0xff))\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage_4528() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4528()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_2811() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2815(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2816(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                sum := add(x, y)\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, checked_add_uint256(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender)), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2816(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2816(var_from), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2816(var_to)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2815(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n            /// @ast-id 1581 @src 6:368:494  \"function mint(address _to, uint256 _amount) public returns (bool) {...\"\n            function fun_mint(var__to, var_amount) -> var_\n            {\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                if /** @src 1:8650:8671  \"account != address(0)\" */ iszero(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ and(/** @src 1:8650:8671  \"account != address(0)\" */ var__to, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ sload(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 1:8946:8964  \"_balances[account]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address_2816(var__to)\n                /// @src 6:126:597  \"contract LPToken is ERC20 {...\"\n                sstore(_1, add(sload(/** @src 1:8946:8974  \"_balances[account] += amount\" */ _1), /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ mload(64)\n                mstore(_2, var_amount)\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 6:126:597  \"contract LPToken is ERC20 {...\" */ 32, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8669:8670  \"0\" */ 0x00, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ var__to)\n                /// @src 6:475:486  \"return true\"\n                var_ := /** @src 6:482:486  \"true\" */ 0x01\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122067671008b25bbae3568e0910a6419997e0b5575e5fd1542f603514f6ffc5cc236c6578706572696d656e74616cf564736f6c634300080b0041\"\n    }\n}\n","hash":"01000225ce2030db12e52d182ad6f80f7d9a92ecf73ce7eb6201b81caba6e43f","factoryDependencies":{}}},"contracts/yieldFarming/tokens/RewardToken.sol":{"RewardToken":{"abi":[{"inputs":[{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/yieldFarming/tokens/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/yieldFarming/tokens/RewardToken.sol\":{\"keccak256\":\"0xc1d94f0ffb819971aa5f036d031fcb764cacc43ec068fc5face22529d826f1a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://39dc22e90fdab5f3e9e1d97bcdacbdb31bb266eddc58fae761fa6bc656a18c2b\",\"dweb:/ipfs/QmQ88oH8dzLa1zzixuaCDNBkbhFpoLbiuAfFxiUyeM1HfB\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"RewardToken.sol:RewardToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_41\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r5\n\tld.1\t64, r1\n\tadd\tr5, r1, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tand\t31, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_69\n\tadd\tr0, r0, r7\n.BB0_8:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_8\n.BB0_69:\n\tsub.s!\t0, r4, r7\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr1, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r4\n\tsub.s!\t96, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_2[0], r2, r6\n\tsub.s!\t0, r6, r7\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_2[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r10, r4\n\tsub.s!\t255, r10, r5\n\tjump.gt\t@.BB0_2\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r3, r3\n\tld.1\t64, r9\n\tadd\tr9, r3, r3\n\tsub!\tr3, r9, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_1[0], r3, r7\n\tjump.gt\t@.BB0_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tst.1\tr9, r5\n\tadd\t32, r5, r3\n\tadd\tr3, r4, r6\n\tsub!\tr6, r2, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB0_23\n\tadd\tr0, r0, r6\n.BB0_20:\n\tadd\t32, r6, r6\n\tadd\tr6, r9, r7\n\tadd\tr6, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_20\n\tsub!\tr6, r5, r4\n\tjump.le\t@.BB0_23\n\tadd\tr9, r3, r3\n\tst.1\tr3, r0\n.BB0_23:\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\tr10, r0, stack-[1]\n\tadd\tr9, r0, stack-[2]\n\tnear_call\tr0, @abi_decode_string_fromMemory, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[1], r0, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @constructor_RewardToken, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_38\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_2811, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_increaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_65\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[2]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_2815, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_41:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_58:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_decreaseAllowance, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_string_fromMemory:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB1_1\n\tld.1\tr1, r4\n\tsub.s!\t@CPI1_1[0], r4, r3\n\tjump.ge\t@.BB1_3\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r5\n\tand\tr3, r5, r5\n\tld.1\t64, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI1_2[0], r5, r7\n\tjump.gt\t@.BB1_3\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB1_3\n\tst.1\t64, r5\n\tst.1\tr3, r4\n\tadd\tr1, r4, r5\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB1_1\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB1_12\n\tadd\tr0, r0, r2\n.BB1_9:\n\tadd\t32, r2, r2\n\tadd\tr2, r3, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB1_9\n\tsub!\tr2, r4, r1\n\tjump.le\t@.BB1_12\n\tadd\tr4, r3, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n.BB1_12:\n\tadd\tr3, r0, r1\n\tret\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nconstructor_RewardToken:\n.func_begin2:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, stack-[4]\n\tld.1.inc\tr2, r6, r8\n\tsub.s!\t@CPI2_0[0], r6, r1\n\tjump.ge\t@.BB2_1\n\tadd\t3, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r7\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r4\n\tadd.ne\tr1, r0, r4\n\tsub.s!\t31, r4, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr7, r1, r1\n\tjump.ne\t@.BB2_3\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t32, r4, r1\n\tadd\tr3, r0, stack-[7]\n\tadd\tr5, r0, stack-[6]\n\tadd\tr6, r0, stack-[5]\n\tjump.lt\t@.BB2_10\n\tadd\tr4, r0, stack-[1]\n\tadd\tr8, r0, stack-[2]\n\tst.1\t0, r5\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[5], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[2], r0, r8\n\tjump.ge\t@.BB2_10\n.BB2_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB2_9\n.BB2_10:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB2_36\n\tst.1\t0, r5\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r6\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB2_33\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB2_32:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB2_32\n.BB2_33:\n\tsub!\tr6, r7, r4\n\tjump.ge\t@.BB2_35\n\tshl.s\t3, r7, r4\n\tand\t248, r4, r5\n\tsub.s\t1, r0, r4\n\tshr\tr4, r5, r5\n\txor\tr5, r4, r4\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r4, r2\n\tsstore\tr1, r2\n.BB2_35:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r5\n\tjump\t@.BB2_11\n.BB2_36:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB2_11\n\tshl.s\t3, r6, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr8, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB2_11:\n\tsstore\tr5, r1\n\tld.1.inc\tr3, r5, r6\n\tsub.s!\t@CPI2_3[0], r5, r1\n\tjump.gt\t@.BB2_1\n\tadd\t4, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_3\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tjump.lt\t@.BB2_18\n\tadd\tr3, r0, stack-[2]\n\tadd\tr6, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[5], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[3], r0, r6\n\tjump.ge\t@.BB2_18\n.BB2_17:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB2_17\n.BB2_18:\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB2_26\n\tst.1\t0, r4\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB2_23\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB2_22:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_22\n.BB2_23:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB2_25\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB2_25:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB2_28\n.BB2_26:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB2_28\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr6, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB2_28:\n\tsstore\tr4, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[4], r0, r3\n\tand\t255, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tsub.s!\t0, r3, r4\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_4\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tjump\t@.BB3_6\n.BB3_4:\n.BB3_6:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin8:\n\tadd\t3, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB8_4\n.BB8_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB8_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB8_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB8_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tjump.gt\t@.BB8_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r2\n\tret\n.BB8_1:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\ncopy_array_from_storage_to_memory_string_2811:\n.func_begin9:\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB9_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB9_4\n.BB9_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_4\n\tadd\t@CPI9_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB9_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB9_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB9_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tjump.gt\t@.BB9_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_6\n\tst.1\t64, r2\n\tret\n.BB9_1:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tadd\t@CPI9_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nmapping_index_access_mapping_address_uint256_of_address_2815:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin11:\n\tand\t@CPI11_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_balanceOf:\n.func_begin12:\n\tand\t@CPI12_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[6]\n\tcontext.caller\tr2\n\tand!\t@CPI13_0[0], r2, r3\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI13_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB13_3\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_approve:\n.func_begin14:\n\tnop\tstack+=[4]\n\tcontext.caller\tr3\n\tand!\t@CPI14_0[0], r3, r4\n\tjump.eq\t@.BB14_1\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI14_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB14_3\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_5\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI14_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB14_5\n\tret\n.BB14_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI14_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI14_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_transferFrom:\n.func_begin15:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tcontext.caller\tr2\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI15_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB15_5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_16\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_18\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB15_7\n\tjump\t@.BB15_1\n.BB15_5:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB15_6\n.BB15_7:\n\tadd\tstack-[6], r0, r1\n\tand!\t@CPI15_0[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tjump.eq\t@.BB15_8\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB15_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI15_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI15_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_16:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI15_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI15_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI15_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI15_1[0], r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_increaseAllowance:\n.func_begin16:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI16_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tsub.s\t1, r0, r2\n\tadd\tstack-[5], r0, r3\n\txor\tr3, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r2, r1\n\tjump.gt\t@.BB16_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI16_2[0], r1, r1\n\tjump.eq\t@.BB16_6\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB16_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI16_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI16_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI16_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI16_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI16_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI16_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB16_1\n\tret\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_4:\n\tadd\t@CPI16_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_0[0], r0, r2\n\tsub.s!\t@CPI16_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_decreaseAllowance:\n.func_begin17:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI17_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB17_4\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_6\n\tadd\tr2, r0, stack-[1]\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB17_8\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI17_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB17_1\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_6:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI17_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI17_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_mint:\n.func_begin18:\n\tnop\tstack+=[2]\n\tand!\t@CPI18_0[0], r1, r5\n\tjump.eq\t@.BB18_1\n\tadd\tr1, r0, stack-[2]\n\tsub.s\t1, r0, r1\n\txor\tr2, r1, r4\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB18_3\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r2, r3\n\tsstore\tr1, r3\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI18_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[1], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI18_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI18_4[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_5\n\tret\n.BB18_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_1[0], r0, r2\n\tsub.s!\t@CPI18_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tadd\t@CPI18_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\n__farcall:\n.func_begin19:\n.tmp0:\n\tfar_call\tr1, r2, @.BB19_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end19:\n\n__staticcall:\n.func_begin20:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB20_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB20_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end20:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI15_1:\nCPI16_0:\nCPI17_0:\nCPI18_1:\n\t.cell 4294967295\nCPI0_1:\nCPI1_2:\nCPI2_3:\nCPI8_1:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI1_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\nCPI1_3:\nCPI2_4:\nCPI8_2:\nCPI9_2:\nCPI16_11:\nCPI18_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_5:\nCPI1_4:\nCPI2_5:\nCPI8_3:\nCPI9_3:\nCPI16_12:\nCPI18_6:\n\t.cell 2852213850513516153367582212096\nCPI0_6:\n\t.cell 1086394136\nCPI0_7:\n\t.cell 2757214934\nCPI0_8:\n\t.cell 2757214935\nCPI0_9:\n\t.cell 2835717307\nCPI0_10:\n\t.cell 3714247998\nCPI0_11:\n\t.cell 1086394137\nCPI0_12:\n\t.cell 1889567281\nCPI0_13:\n\t.cell 2514000705\nCPI0_14:\n\t.cell 599290588\nCPI0_15:\n\t.cell 599290589\nCPI0_16:\n\t.cell 826074471\nCPI0_17:\n\t.cell 961581905\nCPI0_18:\n\t.cell 117300739\nCPI0_19:\n\t.cell 157198259\nCPI0_20:\n\t.cell 404098525\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI1_1:\nCPI2_0:\n\t.cell 18446744073709551616\nCPI2_2:\nCPI13_3:\nCPI14_3:\nCPI15_3:\nCPI16_3:\nCPI17_3:\nCPI18_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_2:\nCPI17_2:\nCPI18_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI8_0:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI9_0:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI10_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\nCPI15_2:\nCPI16_1:\nCPI17_1:\nCPI18_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI13_4:\nCPI15_13:\nCPI18_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI13_5:\nCPI15_14:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI13_6:\nCPI15_15:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI13_7:\nCPI14_7:\nCPI15_7:\nCPI16_7:\nCPI17_7:\nCPI18_8:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI13_8:\nCPI14_8:\nCPI15_8:\nCPI16_8:\nCPI17_8:\n\t.cell 10458117451882892562347801444352\nCPI13_9:\nCPI15_16:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI13_10:\nCPI15_17:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI13_11:\nCPI15_18:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI13_12:\nCPI15_19:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI14_4:\nCPI15_4:\nCPI16_4:\nCPI17_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI14_5:\nCPI15_5:\nCPI16_5:\nCPI17_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI14_6:\nCPI15_6:\nCPI16_6:\nCPI17_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI14_9:\nCPI15_9:\nCPI16_9:\nCPI17_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI14_10:\nCPI15_10:\nCPI16_10:\nCPI17_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI15_11:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI15_12:\nCPI18_9:\n\t.cell 7922816251426433759354395033600\nCPI17_11:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI17_12:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI18_7:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/yieldFarming/tokens/RewardToken.sol\"\nobject \"RewardToken_1643\" {\n    code {\n        {\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"RewardToken_1643\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            let value := mload(memoryDataOffset)\n            if iszero(eq(value, and(value, 0xff)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            let offset := mload(add(memoryDataOffset, 32))\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 64))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            constructor_RewardToken(value, value1, abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1))\n            let _3 := mload(64)\n            let _4 := datasize(\"RewardToken_1643_deployed\")\n            codecopy(_3, dataoffset(\"RewardToken_1643_deployed\"), _4)\n            return(_3, _4)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            array := array_1\n        }\n        function update_storage_value_offsett_uint8_to_uint8(value)\n        {\n            sstore(/** @src 7:335:356  \"_decimals = decimals_\" */ 0x05, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ or(and(sload(/** @src 7:335:356  \"_decimals = decimals_\" */ 0x05), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ not(255)), and(value, 0xff)))\n        }\n        /// @ast-id 1616 @src 7:195:364  \"constructor(...\"\n        function constructor_RewardToken(var_decimals, var_name_mpos, var_symbol_mpos)\n        {\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            let newLen := mload(var_name_mpos)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1246(extract_byte_array_length(sload(/** @src 1:2042:2055  \"_name = name_\" */ 0x03)), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1247()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(var_name_mpos, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(var_name_mpos, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(var_name_mpos, srcOffset))\n                }\n                sstore(/** @src 1:2042:2055  \"_name = name_\" */ 0x03, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(var_symbol_mpos)\n            /// @src 7:335:356  \"_decimals = decimals_\"\n            update_storage_value_offsett_uint8_to_uint8(var_decimals)\n        }\n        /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1247() -> data\n        {\n            mstore(0, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1246(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2042:2055  \"_name = name_\" */ 0x03)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04)), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:2065:2082  \"_symbol = symbol_\" */ 0x04, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/yieldFarming/tokens/RewardToken.sol\"\n    object \"RewardToken_1643_deployed\" {\n        code {\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_approve(param, param_1)\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_bool(memPos_1, ret), memPos_1))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let _3 := sload(/** @src 1:3329:3341  \"_totalSupply\" */ 0x02)\n                        /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint256(memPos_2, _3), memPos_2))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let ret_1 := fun_transferFrom(param_2, param_3, param_4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_bool(memPos_3, ret_1), memPos_3))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_2 := and(sload(/** @src 7:581:590  \"_decimals\" */ 0x05), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0xff)\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint8(memPos_4, ret_2), memPos_4))\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_3 := fun_increaseAllowance(param_5, param_6)\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_bool(memPos_5, ret_3), memPos_5))\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_7, param_8 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_4 := fun_mint(param_7, param_8)\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_bool(memPos_6, ret_4), memPos_6))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_5 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_uint256(memPos_7, ret_5), memPos_7))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string_2811()\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_string(memPos_8, converted_1), memPos_8))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_9, param_10 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_6 := fun_decreaseAllowance(param_9, param_10)\n                        let memPos_9 := mload(_1)\n                        return(memPos_9, sub(abi_encode_bool(memPos_9, ret_6), memPos_9))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        let param_11, param_12 := abi_decode_addresst_uint256(calldatasize())\n                        let ret_7 := fun_transfer(param_11, param_12)\n                        let memPos_10 := mload(_1)\n                        return(memPos_10, sub(abi_encode_bool(memPos_10, ret_7), memPos_10))\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14 := abi_decode_addresst_address(calldatasize())\n                        let _4 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:4089:4107  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2815(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ param_13), param_14))\n                        let memPos_11 := mload(_1)\n                        return(memPos_11, sub(abi_encode_uint256(memPos_11, _4), memPos_11))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint8(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, 0xff))\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value0 := value\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                value1 := value_1\n            }\n            function array_dataslot_string_storage_4528() -> data\n            {\n                mstore(0, /** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 4)\n                data := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let slotValue := sload(/** @src 1:2240:2245  \"_name\" */ 0x03)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4528()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_2811() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let slotValue := sload(4)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2815(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_2816(key) -> dataSlot\n            {\n                mstore(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:7615:7616  \"0\" */ 0x00)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                dataSlot := keccak256(/** @src 1:7615:7616  \"0\" */ 0x00, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 211 @src 1:3406:3531  \"function balanceOf(address account) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_account) -> var\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:3506:3515  \"_balances\" */ 0x00)\n                /// @src 1:3499:3524  \"return _balances[account]\"\n                var := /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sload(keccak256(/** @src 1:3506:3515  \"_balances\" */ 0x00, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x40))\n            }\n            /// @ast-id 236 @src 1:3727:3916  \"function transfer(address to, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_transfer(var_to, var_amount) -> var\n            {\n                /// @src 1:3881:3887  \"amount\"\n                fun__transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3881:3887  \"amount\" */ var_to, var_amount)\n                /// @src 1:3898:3909  \"return true\"\n                var := /** @src 1:3905:3909  \"true\" */ 0x01\n            }\n            /// @ast-id 279 @src 1:4431:4628  \"function approve(address spender, uint256 amount) public virtual override returns (bool) {...\"\n            function fun_approve(var_spender, var_amount) -> var\n            {\n                /// @src 1:4593:4599  \"amount\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4593:4599  \"amount\" */ var_spender, var_amount)\n                /// @src 1:4610:4621  \"return true\"\n                var := /** @src 1:4617:4621  \"true\" */ 0x01\n            }\n            /// @ast-id 312 @src 1:5190:5476  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_amount) -> var\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x40), /** @src 4:719:729  \"msg.sender\" */ caller()))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                if /** @src 1:11351:11388  \"currentAllowance != type(uint256).max\" */ iszero(eq(_1, /** @src 1:11371:11388  \"type(uint256).max\" */ not(0)))\n                /// @src 1:11347:11590  \"if (currentAllowance != type(uint256).max) {...\"\n                {\n                    /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                    if /** @src 1:11412:11438  \"currentAllowance >= amount\" */ lt(_1, var_amount)\n                    /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                    {\n                        let memPtr := mload(0x40)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 0x20)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                        revert(memPtr, 100)\n                    }\n                    /// @src 1:11539:11564  \"currentAllowance - amount\"\n                    fun__approve(var_from, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sub(/** @src 1:11539:11564  \"currentAllowance - amount\" */ _1, var_amount))\n                }\n                /// @src 1:5441:5447  \"amount\"\n                fun__transfer(var_from, var_to, var_amount)\n                /// @src 1:5458:5469  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                sum := add(x, y)\n            }\n            /// @ast-id 341 @src 1:5871:6105  \"function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {...\"\n            function fun_increaseAllowance(var_spender, var_addedValue) -> var\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 1:6038:6076  \"allowance(owner, spender) + addedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_spender, checked_add_uint256(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x40), /** @src 1:6038:6063  \"allowance(owner, spender)\" */ var_spender)), /** @src 1:6038:6076  \"allowance(owner, spender) + addedValue\" */ var_addedValue))\n                /// @src 1:6087:6098  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @ast-id 382 @src 1:6592:7019  \"function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {...\"\n            function fun_decreaseAllowance(var_spender, var_subtractedValue) -> var\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:719:729  \"msg.sender\" */ caller())\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                mstore(0x20, /** @src 1:4089:4100  \"_allowances\" */ 0x01)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := sload(/** @src 1:4089:4116  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 0x40), /** @src 1:6766:6791  \"allowance(owner, spender)\" */ var_spender))\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                if /** @src 1:6809:6844  \"currentAllowance >= subtractedValue\" */ lt(_1, var_subtractedValue)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: decreased allowance below\")\n                    mstore(add(memPtr, 100), \" zero\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:6945:6979  \"currentAllowance - subtractedValue\"\n                fun__approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ var_spender, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sub(/** @src 1:6945:6979  \"currentAllowance - subtractedValue\" */ _1, var_subtractedValue))\n                /// @src 1:7001:7012  \"return true\"\n                var := /** @src 1:4089:4100  \"_allowances\" */ 0x01\n            }\n            /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 35)\n                    mstore(add(memPtr, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr, 100), \"ess\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_4107(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr, 100), \"alance\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 459 @src 1:7473:8291  \"function _transfer(...\"\n            function fun__transfer(var_from, var_to, var_amount)\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:7599:7617  \"from != address(0)\" */ iszero(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(/** @src 1:7599:7617  \"from != address(0)\" */ var_from, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:7669:7733  \"require(to != address(0), \\\"ERC20: transfer to the zero address\\\")\"\n                require_helper_stringliteral(/** @src 1:7677:7693  \"to != address(0)\" */ iszero(iszero(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(/** @src 1:7677:7693  \"to != address(0)\" */ var_to, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ _1))))\n                let _2 := sload(/** @src 1:7815:7830  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2816(var_from))\n                /// @src 1:7840:7912  \"require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\")\"\n                require_helper_stringliteral_4107(/** @src 1:7848:7869  \"fromBalance >= amount\" */ iszero(lt(_2, var_amount)))\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                sstore(/** @src 1:7946:7961  \"_balances[from]\" */ mapping_index_access_mapping_address_uint256_of_address_2816(var_from), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sub(/** @src 1:7964:7984  \"fromBalance - amount\" */ _2, var_amount))\n                /// @src 1:8161:8174  \"_balances[to]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_2816(var_to)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                sstore(_3, add(sload(/** @src 1:8161:8184  \"_balances[to] += amount\" */ _3), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                let _4 := /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ mload(64)\n                /// @src 1:8210:8236  \"Transfer(from, to, amount)\"\n                log3(_4, sub(abi_encode_uint256(_4, var_amount), _4), 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to)\n            }\n            /// @ast-id 633 @src 1:10504:10874  \"function _approve(...\"\n            function fun__approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 1:10635:10654  \"owner != address(0)\" */ iszero(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(/** @src 1:10635:10654  \"owner != address(0)\" */ var_owner, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                if /** @src 1:10713:10734  \"spender != address(0)\" */ iszero(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(/** @src 1:10713:10734  \"spender != address(0)\" */ var_spender, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ _1))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                sstore(/** @src 1:10784:10811  \"_allowances[owner][spender]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:10784:10802  \"_allowances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_2815(var_owner), /** @src 1:10784:10811  \"_allowances[owner][spender]\" */ var_spender), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ var_amount)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                let _2 := /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ mload(64)\n                /// @src 1:10835:10867  \"Approval(owner, spender, amount)\"\n                log3(_2, sub(abi_encode_uint256(_2, var_amount), _2), 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, var_owner, var_spender)\n            }\n            /// @ast-id 1633 @src 7:372:498  \"function mint(address _to, uint256 _amount) public returns (bool) {...\"\n            function fun_mint(var__to, var_amount) -> var_\n            {\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                if /** @src 1:8650:8671  \"account != address(0)\" */ iszero(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ and(/** @src 1:8650:8671  \"account != address(0)\" */ var__to, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ sload(/** @src 1:8778:8800  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 1:8946:8964  \"_balances[account]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address_2816(var__to)\n                /// @src 7:126:601  \"contract RewardToken is ERC20 {...\"\n                sstore(_1, add(sload(/** @src 1:8946:8974  \"_balances[account] += amount\" */ _1), /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ mload(64)\n                mstore(_2, var_amount)\n                /// @src 1:8999:9036  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 7:126:601  \"contract RewardToken is ERC20 {...\" */ 32, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8669:8670  \"0\" */ 0x00, /** @src 1:8999:9036  \"Transfer(address(0), account, amount)\" */ var__to)\n                /// @src 7:479:490  \"return true\"\n                var_ := /** @src 7:486:490  \"true\" */ 0x01\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220ebf6f8e6b9b6bc2d3e7ba8907db0ca1e04aab15af2dacac77610afba898688af6c6578706572696d656e74616cf564736f6c634300080b0041\"\n    }\n}\n","hash":"010002257970478bf2c58259995eeea044cc6c9420b3cb61da04bc56e653ddca","factoryDependencies":{}}}}}}