{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7cF01Ce9b3adC68EF7FE0F3Cf8AfEDD7Dcdc329f",
    "txHash": "0xd106d2dd244f05e255abeefbb05e1ad42da1ef9f6c599b402ab3531d70068181"
  },
  "proxies": [
    {
      "address": "0xc080750c0637FD6c490DDd0f1C990A6763cabB89",
      "txHash": "0x1f579137803962053a292da57a6dca8660e4f4eb1f8c634b4b57a1a55b1ece52",
      "kind": "transparent"
    },
    {
      "address": "0x9F618ACB9868B943879050793134310d8C51fC83",
      "txHash": "0xf1aa7d165aa7d9205fafc0ae11dd1d3890598d80feab4b0c38bbdec7dfcd1451",
      "kind": "transparent"
    },
    {
      "address": "0xb3B3B197c34783Df36a9cA8FE7721752461B43aF",
      "txHash": "0xab3a50f14c0bdd0c8b3dcdad321691e556604d458d150afc3a2f456b3d00b1f1",
      "kind": "transparent"
    },
    {
      "address": "0x3050dbAB8cF5ce22cf322c36CFCe6665673BBB5A",
      "txHash": "0x3c49fb87b48c91805a930409645c993a97745c6cf6db9c636d9c2174c4376213",
      "kind": "transparent"
    },
    {
      "address": "0xb1a1F7c315256C1184cd83D38C2137de0B92DDd9",
      "txHash": "0xb933d2a9fd17616f2bf9bee04ee1378f94e12d312110f673c5e8b9f1d3fb5280",
      "kind": "transparent"
    },
    {
      "address": "0xaD8a2BDE8f657Cf6Ed0B5c84924d18F465943acC",
      "txHash": "0x3602868186304c9390c4c5afd2bad189b8998fe3de1f33e0a0dd82002eedf3b3",
      "kind": "transparent"
    },
    {
      "address": "0x2914274a18690716d9a9A72dc8af1354bB9e5Daa",
      "txHash": "0xb5894c721b81045db28c4b7035b3c5f0fa20fd0058d58cf2c9022deb881f3ed3",
      "kind": "transparent"
    },
    {
      "address": "0x9a2C5516D50B5d0A384a16A004d0c9AFbc2B57bF",
      "txHash": "0x292bfc58c1990e21a54cfe953c2ce5b0a5bdd82e420a9c3dbb00fdc58793e1ef",
      "kind": "transparent"
    },
    {
      "address": "0xf730b215423eC02884DCBB87874AddB0434c6D5a",
      "txHash": "0x5f302ddde36aafbf3b6168a0efc99a6af131ea064303e847457bf13557d39e18",
      "kind": "transparent"
    },
    {
      "address": "0x2dBd9B6B591B35565843Cd18729004Bbb171430F",
      "txHash": "0xefe472890e89e2974e21d9e92469f02affd42fcb5ddd98095c77a31fed29e97a",
      "kind": "transparent"
    },
    {
      "address": "0xD239379003C38D929107305C0D46e2938BD842f7",
      "txHash": "0x2d7f9749fd1b57766fa3f3ed1fdf757d99a8a690bed4f1f394b3def5f0b157da",
      "kind": "transparent"
    },
    {
      "address": "0xE94583D94DebFbe2D6c7504E1153F58C3aA894CD",
      "txHash": "0x2009586c0802d3fe81beaf2ba0a8bd871edbe71b2d7d58c41a17961714f270af",
      "kind": "transparent"
    },
    {
      "address": "0x2d9Fcc4d4d7c648D664C3876F50f368B03B9B68d",
      "txHash": "0x6883fd1a950be68aff99d2e4f3076dad134bf0d8857c83c33a93d6ca31c89d23",
      "kind": "transparent"
    },
    {
      "address": "0x1F35986f7Da25A4e7a4e0872406d88A5e42117dc",
      "txHash": "0x1a9c00698cef298a7d0a394992712c388e2bb315a9a3bbcca023bb931a4da5a7",
      "kind": "transparent"
    },
    {
      "address": "0xc9A663Ea904A8f802436508dADFA36B9376395B8",
      "txHash": "0x885dbdacdca643d3c1dcf18262400d44b2a835e14ac1f8008c1a1f3d6dc1a71c",
      "kind": "transparent"
    },
    {
      "address": "0x999F8A706aC0752636da248B169FCE1B5973Cf22",
      "txHash": "0x88adfef0e14eb7d70a1b3b217eadb47c3a4146834bb4de4fe1e2951795a01592",
      "kind": "transparent"
    },
    {
      "address": "0xcf64Beb6F030b60dc05F3F3aAb20362a4831B772",
      "txHash": "0x7b6de6c601639f2c778fa7899179f62625136bbba4e6799a768d7fa1092d3679",
      "kind": "transparent"
    },
    {
      "address": "0x64bB18F53cB11c21E7E3F28078825f4BDD741774",
      "txHash": "0xd92ae8d63c3943e321e12209033239021fa90bd5f9b62f0a9023b41035f3e19f",
      "kind": "transparent"
    },
    {
      "address": "0xB9d92bd7CD9A23B624b8D7a6E8Ff167F3F0F9AE6",
      "txHash": "0xe3c09a7da3d750b60bf21ff259350cf5b342ddb3270793a12ca0c8a17d7e6860",
      "kind": "transparent"
    },
    {
      "address": "0xE94434373b96E6E966AD6bD4Eb6003510d575A09",
      "txHash": "0xa1731c293aac81b4a63ca6593189aa4321d586ec74653b49c64b778f9f765571",
      "kind": "transparent"
    },
    {
      "address": "0xC791C9CD86380c5Bf82a1372F6E384Dd49B267f3",
      "txHash": "0xd4c8828927b78ec9a5a7a61453a11de389d8ff7317a2e1d7ac9358d59fa153e6",
      "kind": "transparent"
    },
    {
      "address": "0xd2789bA31dF5C3770bD79E7A5Ef2f77E01C5e271",
      "txHash": "0x0072c52f3d53c978fece602007d688c39166d6139c0ce90149a0cb4fe8e2d788",
      "kind": "transparent"
    },
    {
      "address": "0xAfB5Ee3c66b0dBa885D365F0EA4D8250908Da09a",
      "txHash": "0xca4244ac60cb363be5ff61d3bad91240bf496f92559c957bdb77eeb41ccc00cf",
      "kind": "transparent"
    },
    {
      "address": "0x926445c2068c718F53CfA0F5b106E71f9426c126",
      "txHash": "0x48fe01aa32ca371178a91ac47d3687a759e6c24b806c5e605927476056da4778",
      "kind": "transparent"
    },
    {
      "address": "0x331c3ee313BAbcaE61703cb61ce17e337AA238EC",
      "txHash": "0x28c862a2f8bbc9fd2ea8d98bfd77f9346c84de7d6202971e15104401b24ce3ca",
      "kind": "transparent"
    },
    {
      "address": "0xb5aac09d6e44F20fA2365FF73c228CaB97622bF6",
      "txHash": "0x4229c27792bc1c8738ec739b45d5907a095ae765391f2a5f8460f6f213f630cf",
      "kind": "transparent"
    },
    {
      "address": "0x1Bc5F0aE581a92C1A52E3586AcAC6DF9aDdEF3ce",
      "txHash": "0x3f3ad37d1b15182333efc00da180479440dc082593ae79af4cf227248c33b54a",
      "kind": "transparent"
    },
    {
      "address": "0x58fc2F37b6DDb18c64fCC426BCe471e06fdA4db6",
      "txHash": "0x136da5c25155bca7e9f920bc101ce27682440632ca3636a15a19c87a6cc3599b",
      "kind": "transparent"
    },
    {
      "address": "0x14DefD7344653c01a7EC2fa92eF5D678f8cF0Be9",
      "txHash": "0x1f2e6ced935d545fd287d00bbc392d8842a0ef2b7fd2a198938fbbdec3cef074",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d63818bc3a50eabb469df6265fea35011fed64f8a828d062544e3bbbb7e54385": {
      "address": "0x30Fc4a40e8D008a10BDFB4616A2e7e3858B1Df23",
      "txHash": "0xb0f06bc2974ce78a232efa91dce64028321b1c0eaa700ee6caabc8899b9652d4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:28"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "401",
            "type": "t_bool",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:30"
          },
          {
            "label": "tokenPrice",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:32"
          },
          {
            "label": "tokenIdCounter",
            "offset": 0,
            "slot": "403",
            "type": "t_struct(Counter)3460_storage",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:34"
          },
          {
            "label": "repAdminAddress",
            "offset": 0,
            "slot": "404",
            "type": "t_address",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:37"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "405",
            "type": "t_address_payable",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:40"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:43"
          },
          {
            "label": "tevanRep",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:46"
          },
          {
            "label": "tokenImageUri",
            "offset": 0,
            "slot": "408",
            "type": "t_string_storage",
            "contract": "CitizenIDV1",
            "src": "contracts\\teva\\CitizenIDV1.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3460_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d04ddcd29e24f3f8f9a5ec5b2ca16c7df9cb981dae92bbe8e8df2fdd5f535e6e": {
      "address": "0x99513986092519b4c003D0Db1842cae7a7b22243",
      "txHash": "0xbe844b690e43e0093e9eeff5be16e614501ce8cd4466e0b56af8e2159f27c040",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "41a3afe11a6a74fbf83d78b9ef9afdeb72239668551919dd1d8eef45f2df20ff": {
      "address": "0xcc0945cA451A497119B2e497df3D2769bE10498f",
      "txHash": "0x07219d1971c054e6b286eda25a9c362518ca6f60926d7ed3c23ad1aacfcf3a9d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9aa9e2e96a80560c4a2a0f08e614b8b35f726d95be44af97d29625c8d63280bb": {
      "address": "0xCe7CCC205f9ca1CFEd792F377ab3A8C75bc4d370",
      "txHash": "0x43ef7fe82c859ed8da72be127403ba7507a5da9c6735814c1535c13d0d0a2d39",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b2c29fc0eeeb302530df57df30d2a5dcba7fb0c76336964197d965c6cc1c85bc": {
      "address": "0xBDdaFD6077e9BB79E2ADf9a8B3fE02DC8Fb1Ce9B",
      "txHash": "0x64a875be80e5d0cf406f7f7a7375b4e66bd94307eca815171fa25baf9fded141",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "08118840d412ed9f9dce6d0ae4061609557bc99f1fea4be6443ec1dcef1de094": {
      "address": "0xE7739d3CA903eD8Bc33200f6E3a565602072Fb38",
      "txHash": "0xdb3eb0921abfa5f734c0992d413680622dfeda8da9e5d0067ccb65bf985d2e5e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9e9e115a9b1f404bd5337430b4403583f71123ca01c37e8fa5e2215dd200a398": {
      "address": "0x5f00d7C99f5c1d45F61A331023eb280369D377F5",
      "txHash": "0x9e1292065f2a5876d5628605a915b156473555c4b424d8334bccca10b3d5bbcb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "382b41f525119a140666eb22034228a0384b02365406dbf405544acc81abbeae": {
      "address": "0x80c091e433c2DEe011aB67C85a8f326D97892DD9",
      "txHash": "0xae2be92d2e03465f0c5e76bac6cc8ce8512cb2fe5edd50dbdd8f32aed2bc7aa8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "029980df006ccd26c686196f23fe836fa7e486e6a287af12c3fcab7370e922e9": {
      "address": "0x1Cee3376a25bD8E9202e37cAAc197dD8Ae7C56e2",
      "txHash": "0x2783129b73e7ae68e987d7eec24cc2ae506ee772cfc267b435b7c6755f1951f4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "74763de7289ea7592fe0b0a1110cf147e7ddff3935878047466904ea478500b1": {
      "address": "0xB912c95e51a78abFfeE60c494D27c9fEBC83954c",
      "txHash": "0xba6fec5cce6c0617545a1ccc8cc9c52774bbed8cd6f7c04f5692c98d86a3d12a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4466c3cc425081fc1001a9c6c813c657c3b6161afadeff22ae62e0f8db70f19c": {
      "address": "0x42F7B5598E69Ac060251f47a671aF4bBac13B403",
      "txHash": "0xb2785f05ef89c0a19d3b2818e08c22bcfeeb39d8df18f8d5d3d271b03e1e47ae",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "202",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "citizenIdContract",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(CitizenIDV1)5564",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:24"
          },
          {
            "label": "claimContract",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:27"
          },
          {
            "label": "canClaim",
            "offset": 20,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:29"
          },
          {
            "label": "canTransfer",
            "offset": 21,
            "slot": "303",
            "type": "t_bool",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:35"
          },
          {
            "label": "safeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address_payable",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:37"
          },
          {
            "label": "buyCap",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:39"
          },
          {
            "label": "boughtKP",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:41"
          },
          {
            "label": "toBeClaimedKP",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:43"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KarmaPointV2",
            "src": "contracts\\teva\\KarmaPointV2.sol:263"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CitizenIDV1)5564": {
            "label": "contract CitizenIDV1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
